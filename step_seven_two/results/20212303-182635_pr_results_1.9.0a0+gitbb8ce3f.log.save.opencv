
No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
__version__ = 1.9.0a0+gitbb8ce3f
debug = False
cuda = None
git_version = bb8ce3f091d5b64061aef9536f22e8e75c304937
hip = None


Uses tests cases:  ['linear:2dcf', 'linear:2dcl', 'linear:3dcf', 'linear:3dcl', 'linear:1d', 'nearest:2dcf', 'nearest:2dcl', 'nearest:3dcf', 'nearest:3dcl', 'nearest:1d', 'cubic:2dcf', 'cubic:2dcl', 'cubic:3dcf', 'cubic:3dcl', 'cubic:1d']
Torch config: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - CPU capability usage: AVX2
  - Build settings: BUILD_TYPE=Release, CXX_COMPILER=/usr/lib/ccache/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=0, USE_CUDNN=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=0, USE_OPENMP=ON, 

Num threads: 6


---- Benchmark linear 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511cd0>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 72.33 us
  IQR:    12.77 us (72.17 to 84.94)
  1179 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 17.7% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511ca0>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 231.13 us
  IQR:    136.47 us (230.32 to 366.79)
  351 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 59.0% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511f10>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 73.58 us
  IQR:    3.40 us (73.27 to 76.67)
  1170 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511eb0>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 231.98 us
  IQR:    31.42 us (231.28 to 262.70)
  360 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 13.5% of the median measurement.
           This could indicate system fluctuation.

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a50a0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 1.02 ms
  IQR:    0.03 ms (1.02 to 1.05)
  965 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a51f0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 27.02 us
  IQR:    5.68 us (26.64 to 32.32)
  3453 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 21.0% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5070>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 3.89 ms
  IQR:    0.19 ms (3.87 to 4.06)
  251 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5220>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 65.05 us
  IQR:    15.06 us (62.48 to 77.54)
  1431 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 23.1% of the median measurement.
           This could indicate system fluctuation.

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5190>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 2.49 ms
  IQR:    0.34 ms (2.28 to 2.63)
  401 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 13.8% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a55b0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 41.64 ms
  IQR:    7.30 ms (36.39 to 43.69)
  25 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 17.5% of the median measurement.
           This could indicate system fluctuation.

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5400>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 60.28 us
  IQR:    0.31 us (60.21 to 60.52)
  163 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5640>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 904.78 us
  IQR:    63.16 us (894.11 to 957.28)
  1058 measurements, 1 runs per measurement, 6 threads

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5790>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 57.39 us
  IQR:    1.23 us (56.48 to 57.71)
  174 measurements, 100 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5880>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 182.45 us
  IQR:    6.04 us (180.38 to 186.42)
  541 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c0ff901f0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 496.23 us
  IQR:    23.71 us (479.55 to 503.26)
  201 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511d00>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 1.51 ms
  IQR:    0.05 ms (1.49 to 1.54)
  652 measurements, 1 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511be0>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 2.34 ms
  IQR:    0.80 ms (2.31 to 3.11)
  375 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 34.2% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511b20>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 59.28 ms
  IQR:    15.06 ms (54.94 to 70.00)
  17 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 25.4% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511d90>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 73.60 us
  IQR:    50.82 us (73.31 to 124.13)
  1095 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 69.1% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511a60>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 534.74 us
  IQR:    62.97 us (532.32 to 595.29)
  1524 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 11.8% of the median measurement.
           This could indicate system fluctuation.

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511970>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 74.78 us
  IQR:    8.93 us (74.50 to 83.43)
  1130 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 11.9% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511760>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 536.72 us
  IQR:    442.98 us (534.63 to 977.61)
  1435 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 82.5% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf05119d0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 974.98 us
  IQR:    53.29 us (970.90 to 1024.19)
  972 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf0511880>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 36.39 us
  IQR:    5.32 us (36.29 to 41.61)
  258 measurements, 100 runs per measurement, 6 threads
  WARNING: Interquartile range is 14.6% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf05117f0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 9.93 ms
  IQR:    0.13 ms (9.89 to 10.02)
  101 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf05117c0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 144.82 us
  IQR:    34.89 us (143.51 to 178.40)
  629 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 24.1% of the median measurement.
           This could indicate system fluctuation.

---- END Benchmark linear 2D ----


---- Benchmark linear 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 1d (1 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a54c0>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+gitbb8ce3f
  Median: 103.65 us
  IQR:    30.35 us (103.12 to 133.47)
  835 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 29.3% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample linear 1d (1 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a54f0>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+gitbb8ce3f
  Median: 193.57 us
  IQR:    62.68 us (192.76 to 255.44)
  443 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 32.4% of the median measurement.
           This suggests significant environmental influence.

---- END Benchmark linear 1D ----


---- Benchmark linear 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5a60>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 2.22 ms
  IQR:    0.32 ms (2.10 to 2.42)
  401 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 14.6% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample linear 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5af0>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 47.93 ms
  IQR:    10.01 ms (45.76 to 55.77)
  20 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 20.9% of the median measurement.
           This could indicate system fluctuation.

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5b20>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 3.69 ms
  IQR:    1.42 ms (3.59 to 5.02)
  226 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 38.6% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample linear 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5550>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 85.10 ms
  IQR:    15.93 ms (70.74 to 86.67)
  13 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 18.7% of the median measurement.
           This could indicate system fluctuation.

---- END Benchmark linear 3D ----


---- Benchmark nearest 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5a90>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 31.19 us
  IQR:    8.33 us (31.07 to 39.40)
  278 measurements, 100 runs per measurement, 6 threads
  WARNING: Interquartile range is 26.7% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5ca0>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 78.01 us
  IQR:    58.68 us (77.28 to 135.95)
  1003 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 75.2% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a58b0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 59.40 us
  IQR:    24.82 us (59.27 to 84.09)
  1394 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 41.8% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a58e0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 201.20 us
  IQR:    43.51 us (200.57 to 244.07)
  421 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 21.6% of the median measurement.
           This could indicate system fluctuation.

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5ac0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 31.62 us
  IQR:    7.29 us (31.36 to 38.65)
  280 measurements, 100 runs per measurement, 6 threads
  WARNING: Interquartile range is 23.0% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5c70>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 77.97 us
  IQR:    25.75 us (77.42 to 103.17)
  1074 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 33.0% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5970>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 113.70 us
  IQR:    54.03 us (59.93 to 113.96)
  107 measurements, 100 runs per measurement, 6 threads
  WARNING: Interquartile range is 47.5% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5b50>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 201.30 us
  IQR:    104.03 us (200.56 to 304.58)
  400 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 51.7% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5f40>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 101.75 us
  IQR:    14.63 us (101.23 to 115.86)
  860 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 14.4% of the median measurement.
           This could indicate system fluctuation.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5d60>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 78.20 us
  IQR:    3.13 us (75.49 to 78.62)
  128 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5df0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 356.35 us
  IQR:    151.89 us (355.50 to 507.39)
  2307 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 42.6% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5ee0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 72.51 us
  IQR:    1.76 us (72.18 to 73.93)
  1258 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a57f0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 106.14 us
  IQR:    17.08 us (105.67 to 122.75)
  797 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 16.1% of the median measurement.
           This could indicate system fluctuation.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5e80>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 72.24 us
  IQR:    3.76 us (71.37 to 75.13)
  132 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2bf03a5d00>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 382.82 us
  IQR:    139.43 us (382.20 to 521.62)
  2150 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 36.4% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a860d0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 77.27 us
  IQR:    5.87 us (76.55 to 82.42)
  1154 measurements, 10 runs per measurement, 6 threads

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a860a0>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 1.49 ms
  IQR:    0.26 ms (1.41 to 1.67)
  653 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 17.2% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86100>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 39.17 ms
  IQR:    4.43 ms (35.76 to 40.19)
  27 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 11.3% of the median measurement.
           This could indicate system fluctuation.

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86220>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 1.12 ms
  IQR:    0.83 ms (1.11 to 1.94)
  695 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 74.0% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a862b0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 27.38 ms
  IQR:    9.66 ms (24.09 to 33.75)
  34 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 35.3% of the median measurement.
           This suggests significant environmental influence.

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86400>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 25.78 us
  IQR:    3.93 us (25.66 to 29.59)
  355 measurements, 100 runs per measurement, 6 threads
  WARNING: Interquartile range is 15.2% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a864f0>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 565.20 us
  IQR:    91.95 us (552.14 to 644.09)
  168 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 16.3% of the median measurement.
           This could indicate system fluctuation.

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86610>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 78.90 us
  IQR:    6.90 us (78.64 to 85.55)
  1104 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a863a0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 1.07 ms
  IQR:    0.45 ms (1.06 to 1.51)
  772 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 42.2% of the median measurement.
           This suggests significant environmental influence.

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a867c0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 21.19 us
  IQR:    0.88 us (21.11 to 21.99)
  456 measurements, 100 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a866a0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 37.95 us
  IQR:    1.11 us (37.80 to 38.91)
  255 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86790>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 92.43 us
  IQR:    27.43 us (91.72 to 119.15)
  947 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 29.7% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86340>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 396.58 us
  IQR:    15.27 us (395.01 to 410.28)
  248 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86880>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 61.28 us
  IQR:    2.14 us (61.19 to 63.32)
  1462 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a861f0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 11.24 us
  IQR:    0.47 us (10.96 to 11.43)
  881 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86a00>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 540.33 us
  IQR:    414.16 us (539.43 to 953.59)
  1417 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 76.7% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86700>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 97.41 us
  IQR:    3.85 us (95.86 to 99.71)
  1007 measurements, 10 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86760>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 2.22 ms
  IQR:    0.25 ms (2.21 to 2.46)
  427 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 11.2% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a868e0>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 44.12 ms
  IQR:    6.44 ms (41.75 to 48.19)
  23 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 14.6% of the median measurement.
           This could indicate system fluctuation.

Input tensor: [32, 64, 128, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86a90>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 588.12 us
  IQR:    127.87 us (586.39 to 714.25)
  1423 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 21.7% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86730>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 17.08 ms
  IQR:    8.15 ms (12.96 to 21.11)
  58 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 47.7% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86df0>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 33.82 us
  IQR:    10.98 us (33.45 to 44.43)
  255 measurements, 100 runs per measurement, 6 threads
  WARNING: Interquartile range is 32.4% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86c10>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 169.44 us
  IQR:    76.03 us (168.50 to 244.53)
  485 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 44.9% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86dc0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 59.95 us
  IQR:    4.71 us (59.83 to 64.54)
  1428 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86d90>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 469.96 us
  IQR:    244.69 us (469.43 to 714.12)
  1698 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 52.1% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86bb0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 33.80 us
  IQR:    8.26 us (33.59 to 41.85)
  263 measurements, 100 runs per measurement, 6 threads
  WARNING: Interquartile range is 24.4% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86c70>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 171.01 us
  IQR:    61.09 us (170.06 to 231.15)
  493 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 35.7% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86ac0>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 60.52 us
  IQR:    8.13 us (60.37 to 68.50)
  1410 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 13.4% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86f40>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 703.01 us
  IQR:    526.73 us (469.09 to 995.81)
  1389 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 74.9% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a869d0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 102.27 us
  IQR:    16.89 us (101.73 to 118.62)
  840 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 16.5% of the median measurement.
           This could indicate system fluctuation.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86b50>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 84.95 us
  IQR:    1.12 us (84.62 to 85.74)
  116 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c06a86190>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 847.22 us
  IQR:    335.03 us (841.85 to 1176.88)
  989 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 39.5% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1130>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 137.49 us
  IQR:    2.21 us (136.90 to 139.12)
  704 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b10a0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 107.82 us
  IQR:    83.85 us (106.83 to 190.68)
  706 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 77.8% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b12e0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 75.30 us
  IQR:    1.52 us (74.85 to 76.37)
  130 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b10d0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 913.63 us
  IQR:    74.14 us (908.56 to 982.70)
  922 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b14f0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 145.13 us
  IQR:    0.90 us (144.80 to 145.70)
  665 measurements, 10 runs per measurement, 6 threads

---- END Benchmark nearest 2D ----


---- Benchmark nearest 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (1 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1160>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+gitbb8ce3f
  Median: 53.19 us
  IQR:    15.22 us (52.81 to 68.03)
  163 measurements, 100 runs per measurement, 6 threads
  WARNING: Interquartile range is 28.6% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample nearest 1d (1 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1610>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+gitbb8ce3f
  Median: 101.39 us
  IQR:    75.85 us (87.40 to 163.24)
  814 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 74.8% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (1 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1520>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [256]
1.9.0a0+gitbb8ce3f
  Median: 101.80 us
  IQR:    10.49 us (101.27 to 111.77)
  830 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 10.3% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample nearest 1d (1 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1700>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [512]
1.9.0a0+gitbb8ce3f
  Median: 345.65 us
  IQR:    205.39 us (190.07 to 395.46)
  328 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 59.4% of the median measurement.
           This suggests significant environmental influence.

---- END Benchmark nearest 1D ----


---- Benchmark nearest 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b14c0>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 212.60 us
  IQR:    94.26 us (208.53 to 302.79)
  3969 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 44.3% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b15e0>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 15.00 ms
  IQR:    3.48 ms (13.11 to 16.59)
  67 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 23.2% of the median measurement.
           This could indicate system fluctuation.

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1970>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 587.45 us
  IQR:    234.42 us (586.31 to 820.73)
  1413 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 39.9% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b17c0>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 9.29 ms
  IQR:    3.39 ms (9.18 to 12.57)
  91 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 36.5% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1a60>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 873.93 us
  IQR:    372.24 us (864.09 to 1236.33)
  943 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 42.6% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1ac0>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 25.85 ms
  IQR:    8.76 ms (24.31 to 33.07)
  35 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 33.9% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b13a0>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 1.06 ms
  IQR:    0.17 ms (1.06 to 1.23)
  791 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 16.1% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b17f0>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 19.23 ms
  IQR:    12.05 ms (16.58 to 28.64)
  46 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 62.7% of the median measurement.
           This suggests significant environmental influence.

---- END Benchmark nearest 3D ----


---- Benchmark cubic 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1250>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 351.67 us
  IQR:    153.90 us (350.01 to 503.91)
  233 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 43.8% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1b20>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 1.25 ms
  IQR:    0.14 ms (1.25 to 1.38)
  671 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 10.9% of the median measurement.
           This could indicate system fluctuation.

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1b80>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 350.41 us
  IQR:    192.09 us (348.47 to 540.56)
  233 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 54.8% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1c10>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 1.26 ms
  IQR:    0.15 ms (1.25 to 1.40)
  668 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 11.7% of the median measurement.
           This could indicate system fluctuation.

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1c70>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 359.93 us
  IQR:    290.72 us (349.85 to 640.57)
  214 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 80.8% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1d90>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 61.90 us
  IQR:    8.84 us (61.67 to 70.51)
  153 measurements, 100 runs per measurement, 6 threads
  WARNING: Interquartile range is 14.3% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1ee0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 1.26 ms
  IQR:    0.80 ms (1.25 to 2.06)
  621 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 63.5% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1cd0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 148.42 us
  IQR:    17.72 us (147.30 to 165.01)
  639 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 11.9% of the median measurement.
           This could indicate system fluctuation.

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1e80>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 17.23 ms
  IQR:    5.20 ms (16.86 to 22.06)
  51 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 30.2% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1be0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 196.41 ms
  IQR:    54.50 ms (193.66 to 248.16)
  5 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 27.7% of the median measurement.
           This suggests significant environmental influence.

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1fa0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 883.45 us
  IQR:    24.00 us (881.80 to 905.80)
  985 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c050b1580>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 8.18 ms
  IQR:    4.68 ms (7.75 to 12.43)
  103 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 57.2% of the median measurement.
           This suggests significant environmental influence.

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f710d0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 666.01 us
  IQR:    4.78 us (665.24 to 670.02)
  1328 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f71130>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 643.40 us
  IQR:    28.48 us (620.10 to 648.59)
  156 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f710a0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 4.11 ms
  IQR:    3.14 ms (3.90 to 7.04)
  193 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 76.4% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f71040>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 3.71 ms
  IQR:    0.20 ms (3.63 to 3.83)
  263 measurements, 1 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f71100>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 7.30 ms
  IQR:    5.01 ms (6.93 to 11.94)
  110 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 68.6% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f71430>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 157.78 ms
  IQR:    5.07 ms (155.17 to 160.24)
  7 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f714f0>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 354.24 us
  IQR:    284.63 us (347.72 to 632.35)
  2119 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 80.3% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f71550>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 3.06 ms
  IQR:    2.75 ms (3.01 to 5.75)
  247 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 89.8% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f716a0>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 550.78 us
  IQR:    277.18 us (347.81 to 624.99)
  202 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 50.3% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f71730>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 3.22 ms
  IQR:    2.67 ms (3.04 to 5.71)
  239 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 82.9% of the median measurement.
           This suggests significant environmental influence.

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f71790>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 355.31 us
  IQR:    230.89 us (352.47 to 583.36)
  224 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 65.0% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f713d0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 77.79 us
  IQR:    9.71 us (77.26 to 86.97)
  1214 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 12.5% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f71250>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 3.08 ms
  IQR:    2.12 ms (3.02 to 5.14)
  259 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 69.0% of the median measurement.
           This suggests significant environmental influence.
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f2c04f71a30>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 308.98 us
  IQR:    40.10 us (307.73 to 347.83)
  308 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 13.0% of the median measurement.
           This could indicate system fluctuation.

---- END Benchmark cubic 2D ----


opencv version: 4.5.1
numpy version: 1.20.1



General configuration for OpenCV 4.5.1 =====================================
  Version control:               4.5.1

  Platform:
    Timestamp:                   2021-01-02T13:26:00Z
    Host:                        Linux 4.15.0-1077-gcp x86_64
    CMake:                       3.18.4
    CMake generator:             Unix Makefiles
    CMake build tool:            /bin/gmake
    Configuration:               Release

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2 AVX512_SKX
      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX
      SSE4_1 (15 files):         + SSSE3 SSE4_1
      SSE4_2 (1 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
      FP16 (0 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (4 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (29 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2
      AVX512_SKX (4 files):      + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2 AVX_512F AVX512_COMMON AVX512_SKX

  C/C++:
    Built as dynamic libs?:      NO
    C++ standard:                11
    C++ Compiler:                /usr/lib/ccache/compilers/c++  (ver 9.3.1)
    C++ flags (Release):         -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
    C++ flags (Debug):           -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
    C Compiler:                  /usr/lib/ccache/compilers/cc
    C flags (Release):           -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Wno-comment -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG
    C flags (Debug):             -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Wno-comment -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG
    Linker flags (Release):      -Wl,--exclude-libs,libippicv.a -Wl,--exclude-libs,libippiw.a -L/root/ffmpeg_build/lib  -Wl,--gc-sections -Wl,--as-needed  
    Linker flags (Debug):        -Wl,--exclude-libs,libippicv.a -Wl,--exclude-libs,libippiw.a -L/root/ffmpeg_build/lib  -Wl,--gc-sections -Wl,--as-needed  
    ccache:                      YES
    Precompiled headers:         NO
    Extra dependencies:          ade /lib64/libpng.so /lib64/libz.so dl m pthread rt
    3rdparty dependencies:       ittnotify libprotobuf libjpeg-turbo libwebp libtiff libopenjp2 IlmImf quirc ippiw ippicv

  OpenCV modules:
    To be built:                 calib3d core dnn features2d flann gapi highgui imgcodecs imgproc ml objdetect photo python3 stitching video videoio
    Disabled:                    world
    Disabled by dependency:      -
    Unavailable:                 java python2 ts
    Applications:                -
    Documentation:               NO
    Non-free algorithms:         NO

  GUI: 
    VTK support:                 NO

  Media I/O: 
    ZLib:                        /lib64/libz.so (ver 1.2.7)
    JPEG:                        libjpeg-turbo (ver 2.0.6-62)
    WEBP:                        build (ver encoder: 0x020f)
    PNG:                         /lib64/libpng.so (ver 1.5.13)
    TIFF:                        build (ver 42 - 4.0.10)
    JPEG 2000:                   build (ver 2.3.1)
    OpenEXR:                     build (ver 2.3.0)
    HDR:                         YES
    SUNRASTER:                   YES
    PXM:                         YES
    PFM:                         YES

  Video I/O:
    DC1394:                      NO
    FFMPEG:                      YES
      avcodec:                   YES (58.109.100)
      avformat:                  YES (58.61.100)
      avutil:                    YES (56.60.100)
      swscale:                   YES (5.8.100)
      avresample:                NO
    GStreamer:                   NO
    v4l/v4l2:                    YES (linux/videodev2.h)

  Parallel framework:            pthreads

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Intel IPP:                   2020.0.0 Gold [2020.0.0]
           at:                   /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-build/3rdparty/ippicv/ippicv_lnx/icv
    Intel IPP IW:                sources (2020.0.0)
              at:                /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-build/3rdparty/ippicv/ippicv_lnx/iw
    Lapack:                      NO
    Eigen:                       NO
    Custom HAL:                  NO
    Protobuf:                    build (3.5.1)

  OpenCL:                        YES (no extra features)
    Include path:                /tmp/pip-req-build-jhawztrk/opencv/3rdparty/include/opencl/1.2
    Link libraries:              Dynamic load

  Python 3:
    Interpreter:                 /opt/python/cp38-cp38/bin/python (ver 3.8.6)
    Libraries:                   libpython3.8.a (ver 3.8.6)
    numpy:                       /tmp/pip-build-env-a9o7g0a9/overlay/lib/python3.8/site-packages/numpy/core/include (ver 1.17.3)
    install path:                python

  Python (for build):            /bin/python2.7

  Java:                          
    ant:                         NO
    JNI:                         NO
    Java wrappers:               NO
    Java tests:                  NO

  Install to:                    /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-install
-----------------------------------------------------------------





No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
__version__ = 1.9.0a0+gitbb8ce3f
debug = False
cuda = None
git_version = bb8ce3f091d5b64061aef9536f22e8e75c304937
hip = None


Uses tests cases:  ['linear:2dcf', 'linear:2dcl', 'linear:3dcf', 'linear:3dcl', 'linear:1d', 'nearest:2dcf', 'nearest:2dcl', 'nearest:3dcf', 'nearest:3dcl', 'nearest:1d', 'cubic:2dcf', 'cubic:2dcl', 'cubic:3dcf', 'cubic:3dcl', 'cubic:1d']
Torch config: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - CPU capability usage: AVX2
  - Build settings: BUILD_TYPE=Release, CXX_COMPILER=/usr/lib/ccache/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=0, USE_CUDNN=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=0, USE_OPENMP=ON, 

Num threads: 1


---- Benchmark linear 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9eca0>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 326.77 us
  IQR:    4.46 us (326.56 to 331.02)
  2996 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9ec70>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 1.19 ms
  IQR:    0.06 ms (1.17 to 1.23)
  821 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9ef40>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 319.41 us
  IQR:    5.76 us (314.25 to 320.01)
  314 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9ee80>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 1.18 ms
  IQR:    0.04 ms (1.18 to 1.21)
  836 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f070>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 985.71 us
  IQR:    12.22 us (980.27 to 992.49)
  102 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f100>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 98.20 us
  IQR:    1.39 us (97.52 to 98.91)
  102 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f040>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 3.87 ms
  IQR:    0.04 ms (3.86 to 3.91)
  257 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f0a0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 278.88 us
  IQR:    9.14 us (272.44 to 281.58)
  359 measurements, 10 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f160>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 5.98 ms
  IQR:    0.11 ms (5.94 to 6.06)
  166 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f2e0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 109.56 ms
  IQR:    0.60 ms (109.20 to 109.81)
  10 measurements, 1 runs per measurement, 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f1f0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 109.11 us
  IQR:    3.90 us (108.77 to 112.67)
  904 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f3d0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 1.68 ms
  IQR:    0.12 ms (1.64 to 1.76)
  586 measurements, 1 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f460>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 55.98 us
  IQR:    0.75 us (55.68 to 56.43)
  179 measurements, 100 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f310>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 184.18 us
  IQR:    10.07 us (180.05 to 190.12)
  540 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f610>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 471.93 us
  IQR:    14.43 us (468.53 to 482.96)
  211 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b6c2c71c0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 1.46 ms
  IQR:    0.07 ms (1.44 to 1.50)
  674 measurements, 1 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9ed90>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 9.88 ms
  IQR:    0.21 ms (9.83 to 10.04)
  101 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9ecd0>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 203.39 ms
  IQR:    0.93 ms (203.12 to 204.05)
  5 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9ea90>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 327.84 us
  IQR:    6.68 us (322.88 to 329.57)
  305 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9eaf0>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 2.89 ms
  IQR:    0.07 ms (2.85 to 2.92)
  346 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9ea30>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 330.83 us
  IQR:    6.01 us (325.71 to 331.72)
  303 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9e7c0>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 2.90 ms
  IQR:    0.07 ms (2.86 to 2.93)
  344 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9e700>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 971.20 us
  IQR:    36.62 us (970.91 to 1007.54)
  1011 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9e9a0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 148.82 us
  IQR:    6.32 us (146.06 to 152.39)
  669 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9e8e0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 9.45 ms
  IQR:    0.18 ms (9.36 to 9.54)
  106 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9e730>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 695.60 us
  IQR:    30.20 us (686.17 to 716.36)
  143 measurements, 10 runs per measurement, 1 thread

---- END Benchmark linear 2D ----


---- Benchmark linear 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 1d (1 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9ea00>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+gitbb8ce3f
  Median: 520.63 us
  IQR:    6.52 us (519.50 to 526.02)
  192 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 1d (1 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9eb20>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+gitbb8ce3f
  Median: 1.00 ms
  IQR:    0.03 ms (1.00 to 1.03)
  982 measurements, 1 runs per measurement, 1 thread

---- END Benchmark linear 1D ----


---- Benchmark linear 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9e850>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 11.49 ms
  IQR:    0.14 ms (11.42 to 11.56)
  87 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58f9e880>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 214.84 ms
  IQR:    2.43 ms (214.27 to 216.70)
  5 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f430>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 20.27 ms
  IQR:    1.07 ms (19.79 to 20.86)
  50 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f8e0>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 351.36 ms
  3 measurements, 1 runs per measurement, 1 thread

---- END Benchmark linear 3D ----


---- Benchmark nearest 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fa00>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 108.73 us
  IQR:    2.94 us (108.49 to 111.43)
  908 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fa90>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 364.72 us
  IQR:    4.92 us (362.02 to 366.93)
  274 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f2b0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 278.57 us
  IQR:    5.53 us (273.41 to 278.93)
  360 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f6d0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 1.05 ms
  IQR:    0.03 ms (1.05 to 1.08)
  939 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fac0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 110.62 us
  IQR:    3.79 us (110.28 to 114.07)
  892 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f4f0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 366.59 us
  IQR:    6.01 us (364.01 to 370.02)
  272 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f5b0>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 279.03 us
  IQR:    5.53 us (273.89 to 279.42)
  360 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f820>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 1.05 ms
  IQR:    0.03 ms (1.05 to 1.08)
  941 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f730>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 501.18 us
  IQR:    6.32 us (499.26 to 505.58)
  199 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f5e0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 75.47 us
  IQR:    0.62 us (75.24 to 75.86)
  133 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f250>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 1.90 ms
  IQR:    0.06 ms (1.89 to 1.95)
  522 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f760>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 251.22 us
  IQR:    5.62 us (247.61 to 253.23)
  398 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fc70>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 538.95 us
  IQR:    7.20 us (535.67 to 542.87)
  186 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f9a0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 71.37 us
  IQR:    0.94 us (70.84 to 71.78)
  140 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f9d0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 2.07 ms
  IQR:    0.06 ms (2.05 to 2.10)
  481 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fdf0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 272.85 us
  IQR:    5.55 us (267.79 to 273.34)
  368 measurements, 10 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f970>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 3.50 ms
  IQR:    0.09 ms (3.47 to 3.56)
  284 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fe20>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 104.82 ms
  IQR:    0.68 ms (104.33 to 105.01)
  10 measurements, 1 runs per measurement, 1 thread

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3ff70>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 6.11 ms
  IQR:    0.16 ms (6.05 to 6.21)
  163 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fbb0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 118.79 ms
  IQR:    0.57 ms (118.32 to 118.89)
  9 measurements, 1 runs per measurement, 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f8b0>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 86.05 us
  IQR:    1.06 us (85.47 to 86.53)
  117 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3ffa0>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 1.69 ms
  IQR:    0.13 ms (1.65 to 1.78)
  580 measurements, 1 runs per measurement, 1 thread

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f910>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 386.91 us
  IQR:    3.73 us (386.54 to 390.27)
  258 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3faf0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 5.91 ms
  IQR:    0.08 ms (5.88 to 5.97)
  169 measurements, 1 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f850>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 47.14 us
  IQR:    0.47 us (47.02 to 47.49)
  212 measurements, 100 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fd30>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 37.49 us
  IQR:    0.23 us (37.45 to 37.68)
  267 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f4c0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 431.80 us
  IQR:    9.79 us (430.68 to 440.47)
  230 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fe50>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 391.52 us
  IQR:    10.82 us (388.52 to 399.34)
  254 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3f3a0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 199.74 us
  IQR:    5.87 us (196.29 to 202.16)
  500 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fe80>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 10.58 us
  IQR:    0.44 us (10.55 to 10.99)
  932 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e3fd90>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 2.98 ms
  IQR:    0.06 ms (2.93 to 2.99)
  336 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05070>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 97.19 us
  IQR:    1.37 us (96.68 to 98.05)
  103 measurements, 100 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05040>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 6.23 ms
  IQR:    0.15 ms (6.18 to 6.33)
  160 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05100>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 129.28 ms
  IQR:    0.29 ms (129.03 to 129.32)
  8 measurements, 1 runs per measurement, 1 thread

Input tensor: [32, 64, 128, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05130>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 3.22 ms
  IQR:    0.08 ms (3.20 to 3.28)
  309 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e051c0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 62.01 ms
  IQR:    0.55 ms (61.88 to 62.43)
  17 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05250>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 123.79 us
  IQR:    4.02 us (123.62 to 127.64)
  797 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05310>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 874.54 us
  IQR:    18.78 us (871.43 to 890.21)
  114 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e053d0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 280.17 us
  IQR:    15.93 us (277.57 to 293.50)
  341 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e054c0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 2.58 ms
  IQR:    0.06 ms (2.53 to 2.58)
  390 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e055b0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 123.54 us
  IQR:    3.55 us (123.37 to 126.92)
  799 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05670>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 876.30 us
  IQR:    55.48 us (867.91 to 923.39)
  1117 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05730>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 281.26 us
  IQR:    5.72 us (276.18 to 281.90)
  357 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e057c0>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 2.58 ms
  IQR:    0.06 ms (2.53 to 2.59)
  389 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05220>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 504.71 us
  IQR:    6.30 us (502.99 to 509.29)
  198 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e053a0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 84.07 us
  IQR:    1.12 us (83.77 to 84.89)
  119 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05880>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 4.65 ms
  IQR:    0.08 ms (4.63 to 4.71)
  215 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e058e0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 615.71 us
  IQR:    17.35 us (610.05 to 627.41)
  162 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05940>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 545.57 us
  IQR:    11.98 us (541.21 to 553.20)
  183 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e059a0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 74.71 us
  IQR:    1.15 us (74.20 to 75.35)
  134 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05340>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 5.02 ms
  IQR:    0.07 ms (5.01 to 5.08)
  198 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05a60>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 656.23 us
  IQR:    9.64 us (650.71 to 660.35)
  153 measurements, 10 runs per measurement, 1 thread

---- END Benchmark nearest 2D ----


---- Benchmark nearest 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (1 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e054f0>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+gitbb8ce3f
  Median: 246.44 us
  IQR:    6.05 us (241.80 to 247.84)
  397 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 1d (1 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05a90>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+gitbb8ce3f
  Median: 440.91 us
  IQR:    12.08 us (439.65 to 451.73)
  222 measurements, 10 runs per measurement, 1 thread

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (1 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05b20>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [256]
1.9.0a0+gitbb8ce3f
  Median: 522.27 us
  IQR:    7.00 us (520.91 to 527.92)
  191 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 1d (1 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05790>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [512]
1.9.0a0+gitbb8ce3f
  Median: 1.00 ms
  IQR:    0.03 ms (1.00 to 1.03)
  982 measurements, 1 runs per measurement, 1 thread

---- END Benchmark nearest 1D ----


---- Benchmark nearest 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05850>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 1.01 ms
  IQR:    0.08 ms (0.99 to 1.07)
  959 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05d60>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 46.10 ms
  IQR:    0.87 ms (45.89 to 46.76)
  22 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05700>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 3.24 ms
  IQR:    0.06 ms (3.19 to 3.25)
  309 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05eb0>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 51.14 ms
  IQR:    0.89 ms (50.71 to 51.60)
  20 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05fa0>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 4.74 ms
  IQR:    0.09 ms (4.71 to 4.80)
  211 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05e50>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 108.37 ms
  IQR:    0.87 ms (107.86 to 108.73)
  10 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05f70>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+gitbb8ce3f
  Median: 5.86 ms
  IQR:    0.07 ms (5.82 to 5.89)
  171 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05400>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+gitbb8ce3f
  Median: 92.10 ms
  IQR:    0.79 ms (91.82 to 92.60)
  11 measurements, 1 runs per measurement, 1 thread

---- END Benchmark nearest 3D ----


---- Benchmark cubic 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05460>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 1.68 ms
  IQR:    0.06 ms (1.68 to 1.73)
  587 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e050d0>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 6.65 ms
  IQR:    0.09 ms (6.60 to 6.69)
  151 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e059d0>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 1.69 ms
  IQR:    0.06 ms (1.68 to 1.74)
  585 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05640>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 6.67 ms
  IQR:    0.12 ms (6.62 to 6.73)
  150 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05ca0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 1.69 ms
  IQR:    0.06 ms (1.68 to 1.73)
  586 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05bb0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 215.40 us
  IQR:    9.45 us (210.36 to 219.81)
  464 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05280>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+gitbb8ce3f
  Median: 6.70 ms
  IQR:    0.10 ms (6.65 to 6.74)
  150 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05d30>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 516.13 us
  IQR:    12.00 us (510.26 to 522.26)
  194 measurements, 10 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58e05fd0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 78.47 ms
  IQR:    0.86 ms (77.91 to 78.77)
  13 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7070>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 871.14 ms
  2 measurements, 1 runs per measurement, 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7040>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 4.51 ms
  IQR:    0.05 ms (4.50 to 4.56)
  221 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7100>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 44.37 ms
  IQR:    0.64 ms (43.86 to 44.50)
  23 measurements, 1 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7130>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 2.26 ms
  IQR:    0.05 ms (2.24 to 2.29)
  441 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7250>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 626.24 us
  IQR:    10.67 us (621.26 to 631.93)
  160 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd71f0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 22.23 ms
  IQR:    0.30 ms (22.06 to 22.36)
  45 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd72b0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 3.63 ms
  IQR:    0.15 ms (3.58 to 3.73)
  272 measurements, 1 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7370>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+gitbb8ce3f
  Median: 39.18 ms
  IQR:    0.53 ms (38.91 to 39.44)
  26 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7580>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+gitbb8ce3f
  Median: 668.55 ms
  2 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7430>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 1.70 ms
  IQR:    0.06 ms (1.69 to 1.75)
  582 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7670>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 16.19 ms
  IQR:    0.27 ms (16.06 to 16.33)
  62 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd76d0>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 1.70 ms
  IQR:    0.06 ms (1.69 to 1.75)
  581 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd77c0>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 16.20 ms
  IQR:    0.23 ms (16.12 to 16.35)
  62 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd75b0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+gitbb8ce3f
  Median: 1.70 ms
  IQR:    0.06 ms (1.70 to 1.76)
  579 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd78e0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 291.26 us
  IQR:    10.45 us (286.50 to 296.95)
  342 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7910>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+gitbb8ce3f
  Median: 16.22 ms
  IQR:    0.29 ms (16.11 to 16.41)
  62 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f0b58cd7940>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 1.29 ms
  IQR:    0.08 ms (1.27 to 1.34)
  765 measurements, 1 runs per measurement, 1 thread

---- END Benchmark cubic 2D ----


opencv version: 4.5.1
numpy version: 1.20.1



General configuration for OpenCV 4.5.1 =====================================
  Version control:               4.5.1

  Platform:
    Timestamp:                   2021-01-02T13:26:00Z
    Host:                        Linux 4.15.0-1077-gcp x86_64
    CMake:                       3.18.4
    CMake generator:             Unix Makefiles
    CMake build tool:            /bin/gmake
    Configuration:               Release

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2 AVX512_SKX
      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX
      SSE4_1 (15 files):         + SSSE3 SSE4_1
      SSE4_2 (1 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
      FP16 (0 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (4 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (29 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2
      AVX512_SKX (4 files):      + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2 AVX_512F AVX512_COMMON AVX512_SKX

  C/C++:
    Built as dynamic libs?:      NO
    C++ standard:                11
    C++ Compiler:                /usr/lib/ccache/compilers/c++  (ver 9.3.1)
    C++ flags (Release):         -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
    C++ flags (Debug):           -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
    C Compiler:                  /usr/lib/ccache/compilers/cc
    C flags (Release):           -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Wno-comment -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG
    C flags (Debug):             -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Wno-comment -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG
    Linker flags (Release):      -Wl,--exclude-libs,libippicv.a -Wl,--exclude-libs,libippiw.a -L/root/ffmpeg_build/lib  -Wl,--gc-sections -Wl,--as-needed  
    Linker flags (Debug):        -Wl,--exclude-libs,libippicv.a -Wl,--exclude-libs,libippiw.a -L/root/ffmpeg_build/lib  -Wl,--gc-sections -Wl,--as-needed  
    ccache:                      YES
    Precompiled headers:         NO
    Extra dependencies:          ade /lib64/libpng.so /lib64/libz.so dl m pthread rt
    3rdparty dependencies:       ittnotify libprotobuf libjpeg-turbo libwebp libtiff libopenjp2 IlmImf quirc ippiw ippicv

  OpenCV modules:
    To be built:                 calib3d core dnn features2d flann gapi highgui imgcodecs imgproc ml objdetect photo python3 stitching video videoio
    Disabled:                    world
    Disabled by dependency:      -
    Unavailable:                 java python2 ts
    Applications:                -
    Documentation:               NO
    Non-free algorithms:         NO

  GUI: 
    VTK support:                 NO

  Media I/O: 
    ZLib:                        /lib64/libz.so (ver 1.2.7)
    JPEG:                        libjpeg-turbo (ver 2.0.6-62)
    WEBP:                        build (ver encoder: 0x020f)
    PNG:                         /lib64/libpng.so (ver 1.5.13)
    TIFF:                        build (ver 42 - 4.0.10)
    JPEG 2000:                   build (ver 2.3.1)
    OpenEXR:                     build (ver 2.3.0)
    HDR:                         YES
    SUNRASTER:                   YES
    PXM:                         YES
    PFM:                         YES

  Video I/O:
    DC1394:                      NO
    FFMPEG:                      YES
      avcodec:                   YES (58.109.100)
      avformat:                  YES (58.61.100)
      avutil:                    YES (56.60.100)
      swscale:                   YES (5.8.100)
      avresample:                NO
    GStreamer:                   NO
    v4l/v4l2:                    YES (linux/videodev2.h)

  Parallel framework:            pthreads

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Intel IPP:                   2020.0.0 Gold [2020.0.0]
           at:                   /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-build/3rdparty/ippicv/ippicv_lnx/icv
    Intel IPP IW:                sources (2020.0.0)
              at:                /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-build/3rdparty/ippicv/ippicv_lnx/iw
    Lapack:                      NO
    Eigen:                       NO
    Custom HAL:                  NO
    Protobuf:                    build (3.5.1)

  OpenCL:                        YES (no extra features)
    Include path:                /tmp/pip-req-build-jhawztrk/opencv/3rdparty/include/opencl/1.2
    Link libraries:              Dynamic load

  Python 3:
    Interpreter:                 /opt/python/cp38-cp38/bin/python (ver 3.8.6)
    Libraries:                   libpython3.8.a (ver 3.8.6)
    numpy:                       /tmp/pip-build-env-a9o7g0a9/overlay/lib/python3.8/site-packages/numpy/core/include (ver 1.17.3)
    install path:                python

  Python (for build):            /bin/python2.7

  Java:                          
    ant:                         NO
    JNI:                         NO
    Java wrappers:               NO
    Java tests:                  NO

  Install to:                    /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-install
-----------------------------------------------------------------


