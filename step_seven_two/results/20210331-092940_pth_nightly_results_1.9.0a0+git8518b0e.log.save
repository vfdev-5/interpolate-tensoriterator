
No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
__version__ = 1.9.0a0+git8518b0e
debug = False
cuda = None
git_version = 8518b0ee55a3b04353f9ea3b39d142bf10359bf4
hip = None


Uses tests cases:  ['linear:2dcf', 'linear:2dcl', 'linear:3dcf', 'linear:3dcl', 'linear:1d', 'nearest:2dcf', 'nearest:2dcl', 'nearest:3dcf', 'nearest:3dcl', 'nearest:1d', 'cubic:2dcf', 'cubic:2dcl', 'cubic:3dcf', 'cubic:3dcl', 'cubic:1d']
Torch config: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - CPU capability usage: AVX2
  - Build settings: BUILD_TYPE=Release, CXX_COMPILER=/usr/lib/ccache/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=0, USE_CUDNN=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=0, USE_OPENMP=ON, 

Num threads: 6


---- Benchmark linear 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35dc0>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 76.05 us
  IQR:    0.44 us (75.82 to 76.26)
  654 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35eb0>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 244.78 us
  IQR:    0.71 us (244.45 to 245.16)
  203 measurements, 100 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35f10>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 76.57 us
  IQR:    0.46 us (76.36 to 76.82)
  644 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a130>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 245.98 us
  IQR:    0.69 us (245.65 to 246.34)
  202 measurements, 100 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a070>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 962.20 us
  IQR:    10.41 us (957.13 to 967.55)
  518 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a0d0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 3.84 ms
  IQR:    0.05 ms (3.81 to 3.87)
  1290 measurements, 1 runs per measurement, 6 threads

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a1f0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 2.27 ms
  IQR:    0.01 ms (2.27 to 2.27)
  220 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a280>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 31.91 ms
  IQR:    1.25 ms (31.67 to 32.92)
  157 measurements, 1 runs per measurement, 6 threads

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a340>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 61.28 us
  IQR:    0.20 us (61.17 to 61.38)
  816 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a430>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 912.30 us
  IQR:    2.76 us (910.87 to 913.63)
  548 measurements, 10 runs per measurement, 6 threads

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a1c0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 55.52 us
  IQR:    0.69 us (55.12 to 55.81)
  900 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a5e0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 467.00 us
  IQR:    9.87 us (463.54 to 473.41)
  107 measurements, 100 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a6a0>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 2.33 ms
  IQR:    0.04 ms (2.32 to 2.36)
  2113 measurements, 1 runs per measurement, 6 threads

- Bench upsample linear 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a730>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 47.86 ms
  IQR:    2.16 ms (47.04 to 49.20)
  103 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b8056a370>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 78.09 us
  IQR:    0.43 us (77.90 to 78.33)
  610 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35e20>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 569.27 us
  IQR:    4.13 us (567.10 to 571.23)
  872 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35ca0>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 78.31 us
  IQR:    0.42 us (78.11 to 78.53)
  637 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35b20>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 572.21 us
  IQR:    4.48 us (569.82 to 574.30)
  869 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35b80>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 967.22 us
  IQR:    9.58 us (963.50 to 973.08)
  513 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35ac0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 9.38 ms
  IQR:    0.09 ms (9.36 to 9.45)
  528 measurements, 1 runs per measurement, 6 threads

---- END Benchmark linear 2D ----


---- Benchmark linear 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 1d (5 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35850>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 103.72 us
  IQR:    0.37 us (103.57 to 103.94)
  481 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 1d (5 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35790>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 192.22 us
  IQR:    0.57 us (191.96 to 192.53)
  259 measurements, 100 runs per measurement, 6 threads

---- END Benchmark linear 1D ----


---- Benchmark linear 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35af0>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 1.06 ms
  IQR:    0.01 ms (1.05 to 1.06)
  471 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35a30>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 23.35 ms
  IQR:    0.08 ms (23.32 to 23.39)
  213 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35880>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 12.98 ms
  IQR:    0.10 ms (12.93 to 13.03)
  386 measurements, 1 runs per measurement, 6 threads

- Bench upsample linear 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a358b0>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 236.26 ms
  IQR:    0.70 ms (235.74 to 236.44)
  22 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (5 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35910>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 367.92 us
  IQR:    9.02 us (361.81 to 370.83)
  1362 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 3d (5 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35700>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 38.22 ms
  IQR:    0.32 ms (38.07 to 38.39)
  131 measurements, 1 runs per measurement, 6 threads

---- END Benchmark linear 3D ----


---- Benchmark nearest 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b60a35be0>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 220.53 us
  IQR:    2.44 us (219.82 to 222.26)
  2257 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a4f0>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 865.43 us
  IQR:    3.62 us (863.96 to 867.58)
  575 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a8b0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 264.79 us
  IQR:    2.74 us (264.43 to 267.17)
  1868 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a970>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 1.05 ms
  IQR:    0.00 ms (1.04 to 1.05)
  473 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a760>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 240.16 us
  IQR:    0.85 us (239.85 to 240.70)
  207 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a700>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 886.12 us
  IQR:    3.75 us (884.55 to 888.30)
  562 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a460>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 277.18 us
  IQR:    2.40 us (276.85 to 279.24)
  1777 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a820>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 1.06 ms
  IQR:    0.01 ms (1.06 to 1.06)
  466 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093ab20>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 144.90 us
  IQR:    0.46 us (144.66 to 145.12)
  343 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a7c0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 560.72 us
  IQR:    2.20 us (560.02 to 562.22)
  881 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a310>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 150.14 us
  IQR:    0.54 us (149.93 to 150.46)
  326 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a5b0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 589.50 us
  IQR:    3.54 us (587.89 to 591.43)
  824 measurements, 10 runs per measurement, 6 threads

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a880>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 1.42 ms
  IQR:    0.01 ms (1.41 to 1.42)
  353 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a7f0>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 28.16 ms
  IQR:    1.69 ms (26.87 to 28.56)
  180 measurements, 1 runs per measurement, 6 threads

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093aa30>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 141.29 us
  IQR:    1.54 us (140.44 to 141.98)
  352 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093aac0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 6.92 ms
  IQR:    0.04 ms (6.90 to 6.94)
  722 measurements, 1 runs per measurement, 6 threads

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a670>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 18.39 us
  IQR:    0.06 us (18.36 to 18.42)
  270 measurements, 1000 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a370>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 532.32 us
  IQR:    6.61 us (528.80 to 535.41)
  933 measurements, 10 runs per measurement, 6 threads

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a400>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 10.04 us
  IQR:    0.07 us (10.01 to 10.08)
  498 measurements, 1000 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a940>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 95.82 us
  IQR:    0.35 us (95.67 to 96.03)
  519 measurements, 100 runs per measurement, 6 threads

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a4c0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 13.93 us
  IQR:    0.04 us (13.91 to 13.95)
  359 measurements, 1000 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a580>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 81.32 us
  IQR:    0.26 us (81.19 to 81.45)
  604 measurements, 100 runs per measurement, 6 threads

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093ab80>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 8.11 us
  IQR:    0.03 us (8.10 to 8.13)
  612 measurements, 1000 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a640>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 52.48 us
  IQR:    0.19 us (52.39 to 52.58)
  934 measurements, 100 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093abe0>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 4.89 ms
  IQR:    0.08 ms (4.84 to 4.91)
  1002 measurements, 1 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093afd0>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 73.53 ms
  IQR:    1.26 ms (72.93 to 74.19)
  68 measurements, 1 runs per measurement, 6 threads

Input tensor: [32, 64, 128, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093ae50>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 79.83 us
  IQR:    0.37 us (79.66 to 80.02)
  619 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a3a0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 3.64 ms
  IQR:    0.03 ms (3.63 to 3.67)
  1357 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093ae80>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 222.28 us
  IQR:    0.86 us (221.88 to 222.75)
  222 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093ac10>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 2.11 ms
  IQR:    0.01 ms (2.10 to 2.11)
  236 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a2b0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 266.00 us
  IQR:    2.61 us (265.71 to 268.33)
  1859 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093ad90>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 2.55 ms
  IQR:    0.01 ms (2.54 to 2.55)
  195 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093a850>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 274.90 us
  IQR:    2.25 us (274.56 to 276.81)
  1807 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b6093adc0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 2.19 ms
  IQR:    0.01 ms (2.18 to 2.20)
  227 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda040>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 292.19 us
  IQR:    2.30 us (291.90 to 294.20)
  1695 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda070>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 2.57 ms
  IQR:    0.01 ms (2.57 to 2.58)
  193 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda130>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 145.88 us
  IQR:    0.42 us (145.68 to 146.10)
  341 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda160>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 1.36 ms
  IQR:    0.01 ms (1.36 to 1.37)
  363 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda1f0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 150.73 us
  IQR:    0.52 us (150.51 to 151.03)
  320 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda280>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 1.43 ms
  IQR:    0.00 ms (1.43 to 1.43)
  349 measurements, 10 runs per measurement, 6 threads

---- END Benchmark nearest 2D ----


---- Benchmark nearest 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (5 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda340>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 291.93 us
  IQR:    3.20 us (291.63 to 294.83)
  1694 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 1d (5 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda400>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 577.76 us
  IQR:    3.71 us (575.92 to 579.63)
  857 measurements, 10 runs per measurement, 6 threads

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (5 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda4f0>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 364.23 us
  IQR:    2.71 us (363.58 to 366.29)
  1357 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 1d (5 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda5e0>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 722.82 us
  IQR:    5.03 us (720.52 to 725.55)
  667 measurements, 10 runs per measurement, 6 threads

---- END Benchmark nearest 1D ----


---- Benchmark nearest 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda6a0>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 2.67 ms
  IQR:    0.04 ms (2.67 to 2.71)
  1847 measurements, 1 runs per measurement, 6 threads

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda760>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 42.02 ms
  IQR:    0.14 ms (41.97 to 42.10)
  118 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda7f0>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 3.09 ms
  IQR:    0.02 ms (3.08 to 3.10)
  1603 measurements, 1 runs per measurement, 6 threads

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda250>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 39.84 ms
  IQR:    0.10 ms (39.80 to 39.90)
  125 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda310>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 1.40 ms
  IQR:    0.01 ms (1.40 to 1.40)
  355 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda3d0>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 28.06 ms
  IQR:    0.07 ms (28.02 to 28.10)
  177 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda4c0>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 1.47 ms
  IQR:    0.01 ms (1.46 to 1.47)
  3378 measurements, 1 runs per measurement, 6 threads

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda5b0>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 20.65 ms
  IQR:    0.06 ms (20.62 to 20.68)
  240 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda670>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 50.80 us
  IQR:    0.30 us (50.64 to 50.94)
  977 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda730>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 7.60 ms
  IQR:    0.06 ms (7.57 to 7.64)
  651 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda490>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 69.71 us
  IQR:    0.32 us (69.57 to 69.89)
  714 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda580>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 3.13 ms
  IQR:    0.04 ms (3.12 to 3.17)
  1591 measurements, 1 runs per measurement, 6 threads

---- END Benchmark nearest 3D ----


---- Benchmark cubic 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda640>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.22 ms
  IQR:    0.07 ms (6.19 to 6.26)
  800 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda700>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 24.14 ms
  IQR:    0.16 ms (24.09 to 24.25)
  207 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda7c0>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.24 ms
  IQR:    0.05 ms (6.23 to 6.28)
  800 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda880>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 24.78 ms
  IQR:    0.62 ms (24.27 to 24.88)
  203 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda8e0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.92 ms
  IQR:    0.73 ms (6.26 to 6.99)
  752 measurements, 1 runs per measurement, 6 threads
  WARNING: Interquartile range is 10.5% of the median measurement.
           This could indicate system fluctuation.

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda940>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 24.92 ms
  IQR:    0.14 ms (24.84 to 24.97)
  201 measurements, 1 runs per measurement, 6 threads

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda9a0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 454.24 ms
  IQR:    3.91 ms (451.23 to 455.14)
  12 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fdaa00>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  7.20 s
  1 measurement, 1 runs , 6 threads

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda100>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 10.08 ms
  IQR:    0.09 ms (10.04 to 10.13)
  496 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fdaeb0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 151.04 ms
  IQR:    0.79 ms (150.65 to 151.44)
  34 measurements, 1 runs per measurement, 6 threads

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fdaac0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 4.33 ms
  IQR:    0.06 ms (4.29 to 4.36)
  1136 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fdac40>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 62.40 ms
  IQR:    0.47 ms (62.20 to 62.67)
  81 measurements, 1 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fdaca0>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 612.76 ms
  IQR:    0.47 ms (612.43 to 612.89)
  9 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fdad60>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  9.91 s
  1 measurement, 1 runs , 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda1c0>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.24 ms
  IQR:    0.05 ms (6.22 to 6.27)
  798 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fdad00>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 59.05 ms
  IQR:    0.33 ms (58.86 to 59.19)
  85 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fda2b0>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.35 ms
  IQR:    0.05 ms (6.33 to 6.38)
  787 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76fdabe0>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 59.26 ms
  IQR:    0.31 ms (59.06 to 59.37)
  85 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76611070>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.37 ms
  IQR:    0.05 ms (6.36 to 6.41)
  784 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f2b76611040>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 58.64 ms
  IQR:    0.33 ms (58.48 to 58.81)
  86 measurements, 1 runs per measurement, 6 threads

---- END Benchmark cubic 2D ----



No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
__version__ = 1.9.0a0+git8518b0e
debug = False
cuda = None
git_version = 8518b0ee55a3b04353f9ea3b39d142bf10359bf4
hip = None


Uses tests cases:  ['linear:2dcf', 'linear:2dcl', 'linear:3dcf', 'linear:3dcl', 'linear:1d', 'nearest:2dcf', 'nearest:2dcl', 'nearest:3dcf', 'nearest:3dcl', 'nearest:1d', 'cubic:2dcf', 'cubic:2dcl', 'cubic:3dcf', 'cubic:3dcl', 'cubic:1d']
Torch config: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - CPU capability usage: AVX2
  - Build settings: BUILD_TYPE=Release, CXX_COMPILER=/usr/lib/ccache/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=0, USE_CUDNN=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=0, USE_OPENMP=ON, 

Num threads: 1


---- Benchmark linear 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5ac0>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 331.81 us
  IQR:    5.35 us (331.48 to 336.83)
  1490 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5a60>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 1.26 ms
  IQR:    0.01 ms (1.26 to 1.27)
  397 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5c10>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 338.97 us
  IQR:    4.24 us (338.05 to 342.28)
  147 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5940>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 1.27 ms
  IQR:    0.01 ms (1.26 to 1.27)
  396 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c00a0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 965.37 us
  IQR:    10.37 us (960.23 to 970.59)
  518 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0100>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 3.86 ms
  IQR:    0.03 ms (3.84 to 3.87)
  130 measurements, 10 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0190>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 5.81 ms
  IQR:    0.06 ms (5.77 to 5.83)
  861 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0250>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 99.58 ms
  IQR:    0.50 ms (99.28 to 99.77)
  51 measurements, 1 runs per measurement, 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0310>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 110.45 us
  IQR:    0.88 us (110.08 to 110.95)
  453 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0400>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 1.66 ms
  IQR:    0.01 ms (1.66 to 1.67)
  301 measurements, 10 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c04f0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 55.64 us
  IQR:    0.77 us (55.07 to 55.84)
  900 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c05b0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 467.02 us
  IQR:    3.80 us (465.53 to 469.33)
  107 measurements, 100 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0670>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 10.16 ms
  IQR:    0.10 ms (10.12 to 10.22)
  492 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0700>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 195.97 ms
  IQR:    0.68 ms (195.62 to 196.29)
  26 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1151dd3340>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 347.70 us
  IQR:    2.40 us (346.32 to 348.72)
  144 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5b20>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 3.04 ms
  IQR:    0.02 ms (3.03 to 3.05)
  165 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab58e0>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 348.83 us
  IQR:    2.29 us (347.63 to 349.91)
  144 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5760>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 3.05 ms
  IQR:    0.02 ms (3.04 to 3.07)
  164 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab57c0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 967.73 us
  IQR:    10.12 us (964.04 to 974.16)
  516 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5700>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 9.39 ms
  IQR:    0.06 ms (9.38 to 9.44)
  532 measurements, 1 runs per measurement, 1 thread

---- END Benchmark linear 2D ----


---- Benchmark linear 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 1d (5 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab53d0>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 513.46 us
  IQR:    5.68 us (510.21 to 515.89)
  972 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 1d (5 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab52e0>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 999.01 us
  IQR:    10.39 us (993.86 to 1004.25)
  500 measurements, 10 runs per measurement, 1 thread

---- END Benchmark linear 1D ----


---- Benchmark linear 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5730>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 5.45 ms
  IQR:    0.06 ms (5.40 to 5.46)
  920 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5670>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 111.20 ms
  IQR:    0.60 ms (110.87 to 111.47)
  45 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5400>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 13.52 ms
  IQR:    0.12 ms (13.47 to 13.59)
  369 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5430>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 244.56 ms
  IQR:    1.18 ms (244.18 to 245.37)
  21 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (5 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5490>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 362.20 us
  IQR:    3.36 us (360.66 to 364.02)
  138 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 3d (5 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5280>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 38.14 ms
  IQR:    0.17 ms (38.05 to 38.21)
  131 measurements, 1 runs per measurement, 1 thread

---- END Benchmark linear 3D ----


---- Benchmark nearest 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113eab5820>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.21 ms
  IQR:    0.01 ms (1.20 to 1.21)
  416 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c04c0>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 4.79 ms
  IQR:    0.03 ms (4.78 to 4.81)
  105 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0880>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.46 ms
  IQR:    0.01 ms (1.45 to 1.46)
  343 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0940>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 5.81 ms
  IQR:    0.06 ms (5.76 to 5.81)
  863 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0160>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.28 ms
  IQR:    0.01 ms (1.28 to 1.29)
  389 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c03a0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 4.87 ms
  IQR:    0.03 ms (4.85 to 4.88)
  103 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0430>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.50 ms
  IQR:    0.01 ms (1.50 to 1.51)
  333 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c07f0>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 5.85 ms
  IQR:    0.06 ms (5.80 to 5.86)
  856 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0af0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 746.02 us
  IQR:    6.24 us (741.03 to 747.26)
  671 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0760>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 2.97 ms
  IQR:    0.04 ms (2.96 to 3.00)
  168 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c02e0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 795.69 us
  IQR:    8.92 us (791.88 to 800.80)
  628 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0580>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 3.16 ms
  IQR:    0.02 ms (3.15 to 3.17)
  159 measurements, 10 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0850>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 3.41 ms
  IQR:    0.02 ms (3.40 to 3.42)
  147 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c07c0>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 90.17 ms
  IQR:    0.30 ms (90.06 to 90.35)
  56 measurements, 1 runs per measurement, 1 thread

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0a00>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 798.75 us
  IQR:    6.93 us (795.32 to 802.25)
  626 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0a90>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 25.26 ms
  IQR:    0.12 ms (25.20 to 25.31)
  198 measurements, 1 runs per measurement, 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0640>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 74.84 us
  IQR:    0.59 us (74.63 to 75.22)
  668 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0340>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 1.59 ms
  IQR:    0.01 ms (1.59 to 1.60)
  315 measurements, 10 runs per measurement, 1 thread

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c03d0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 39.34 us
  IQR:    0.19 us (39.24 to 39.43)
  128 measurements, 1000 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0910>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 493.68 us
  IQR:    5.89 us (488.75 to 494.64)
  1014 measurements, 10 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0490>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 39.31 us
  IQR:    0.19 us (39.18 to 39.38)
  128 measurements, 1000 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0550>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 420.27 us
  IQR:    3.26 us (418.48 to 421.74)
  119 measurements, 100 runs per measurement, 1 thread

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0b50>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 22.57 us
  IQR:    0.15 us (22.51 to 22.65)
  222 measurements, 1000 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0610>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 249.74 us
  IQR:    1.50 us (249.17 to 250.68)
  201 measurements, 100 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0bb0>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 26.55 ms
  IQR:    0.24 ms (26.44 to 26.68)
  189 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c06d0>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 341.14 ms
  IQR:    1.02 ms (340.51 to 341.53)
  15 measurements, 1 runs per measurement, 1 thread

Input tensor: [32, 64, 128, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0c70>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 475.25 us
  IQR:    5.57 us (471.66 to 477.23)
  1053 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0df0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 13.71 ms
  IQR:    0.11 ms (13.67 to 13.77)
  364 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0d00>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.21 ms
  IQR:    0.01 ms (1.20 to 1.22)
  413 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0820>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 11.65 ms
  IQR:    0.07 ms (11.63 to 11.70)
  429 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c00d0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.46 ms
  IQR:    0.01 ms (1.45 to 1.47)
  342 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0790>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 14.09 ms
  IQR:    0.13 ms (14.04 to 14.17)
  354 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0ca0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.48 ms
  IQR:    0.01 ms (1.48 to 1.49)
  337 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e9c0730>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 12.05 ms
  IQR:    0.17 ms (11.99 to 12.16)
  414 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2070>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.57 ms
  IQR:    0.01 ms (1.57 to 1.58)
  318 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2040>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 14.21 ms
  IQR:    0.10 ms (14.16 to 14.26)
  352 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2100>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 751.56 us
  IQR:    8.31 us (746.53 to 754.84)
  665 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2130>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 7.22 ms
  IQR:    0.10 ms (7.17 to 7.27)
  692 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f21c0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 804.04 us
  IQR:    1.47 us (803.52 to 804.99)
  622 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2250>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 7.76 ms
  IQR:    0.10 ms (7.72 to 7.82)
  643 measurements, 1 runs per measurement, 1 thread

---- END Benchmark nearest 2D ----


---- Benchmark nearest 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (5 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2310>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 1.60 ms
  IQR:    0.01 ms (1.60 to 1.61)
  313 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 1d (5 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f23d0>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 3.19 ms
  IQR:    0.02 ms (3.18 to 3.20)
  157 measurements, 10 runs per measurement, 1 thread

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (5 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f24c0>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 2.01 ms
  IQR:    0.01 ms (2.00 to 2.02)
  249 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 1d (5 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f25b0>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 4.00 ms
  IQR:    0.02 ms (3.99 to 4.01)
  125 measurements, 10 runs per measurement, 1 thread

---- END Benchmark nearest 1D ----


---- Benchmark nearest 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2670>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 14.80 ms
  IQR:    0.11 ms (14.75 to 14.85)
  338 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2730>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 217.37 ms
  IQR:    0.83 ms (217.13 to 217.96)
  23 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f27c0>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 17.15 ms
  IQR:    0.15 ms (17.10 to 17.25)
  291 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2220>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 221.22 ms
  IQR:    0.42 ms (221.07 to 221.49)
  23 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f22e0>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 7.69 ms
  IQR:    0.07 ms (7.67 to 7.74)
  649 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f23a0>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 138.10 ms
  IQR:    0.32 ms (137.93 to 138.26)
  37 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2490>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 8.15 ms
  IQR:    0.07 ms (8.13 to 8.20)
  614 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2580>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 114.66 ms
  IQR:    1.21 ms (114.39 to 115.59)
  44 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2640>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 251.06 us
  IQR:    1.64 us (250.32 to 251.96)
  199 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2700>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 28.99 ms
  IQR:    0.11 ms (28.94 to 29.04)
  173 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (5 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2460>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 364.30 us
  IQR:    2.80 us (362.91 to 365.71)
  138 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 3d (5 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2550>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 17.28 ms
  IQR:    0.14 ms (17.22 to 17.36)
  289 measurements, 1 runs per measurement, 1 thread

---- END Benchmark nearest 3D ----


---- Benchmark cubic 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2610>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 5.96 ms
  IQR:    0.05 ms (5.93 to 5.99)
  839 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f26d0>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 23.80 ms
  IQR:    0.13 ms (23.75 to 23.88)
  210 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2790>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.05 ms
  IQR:    0.05 ms (6.02 to 6.08)
  826 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2850>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 23.90 ms
  IQR:    0.08 ms (23.86 to 23.94)
  210 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f28b0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.12 ms
  IQR:    0.05 ms (6.09 to 6.14)
  817 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2910>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 23.97 ms
  IQR:    0.11 ms (23.92 to 24.03)
  209 measurements, 1 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2970>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 679.57 ms
  IQR:    1.70 ms (679.00 to 680.70)
  8 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f29d0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  10.33 s
  1 measurement, 1 runs , 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f20d0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 9.83 ms
  IQR:    0.07 ms (9.79 to 9.86)
  509 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2e80>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 134.99 ms
  IQR:    0.56 ms (134.59 to 135.15)
  38 measurements, 1 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2190>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 4.51 ms
  IQR:    0.03 ms (4.50 to 4.52)
  111 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2dc0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 59.40 ms
  IQR:    0.30 ms (59.23 to 59.53)
  85 measurements, 1 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2340>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 620.61 ms
  IQR:    1.88 ms (620.25 to 622.14)
  9 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2400>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  10.12 s
  1 measurement, 1 runs , 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2f10>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.01 ms
  IQR:    0.06 ms (5.96 to 6.01)
  834 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2bb0>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 58.27 ms
  IQR:    0.30 ms (58.10 to 58.40)
  86 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2b50>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.28 ms
  IQR:    0.06 ms (6.23 to 6.29)
  797 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2cd0>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 58.61 ms
  IQR:    0.25 ms (58.47 to 58.72)
  86 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (5 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e8f2e20>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.36 ms
  IQR:    0.09 ms (6.31 to 6.40)
  786 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (5 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f113e7ce070>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 58.72 ms
  IQR:    0.31 ms (58.55 to 58.87)
  86 measurements, 1 runs per measurement, 1 thread

---- END Benchmark cubic 2D ----
