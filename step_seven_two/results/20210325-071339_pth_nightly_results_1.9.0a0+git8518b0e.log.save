
No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
__version__ = 1.9.0a0+git8518b0e
debug = False
cuda = None
git_version = 8518b0ee55a3b04353f9ea3b39d142bf10359bf4
hip = None


Uses tests cases:  ['linear:2dcf', 'linear:2dcl', 'linear:3dcf', 'linear:3dcl', 'linear:1d', 'nearest:2dcf', 'nearest:2dcl', 'nearest:3dcf', 'nearest:3dcl', 'nearest:1d', 'cubic:2dcf', 'cubic:2dcl', 'cubic:3dcf', 'cubic:3dcl', 'cubic:1d']
Torch config: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - CPU capability usage: AVX2
  - Build settings: BUILD_TYPE=Release, CXX_COMPILER=/usr/lib/ccache/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=0, USE_CUDNN=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=0, USE_OPENMP=ON, 

Num threads: 6


---- Benchmark linear 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b460>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 76.83 us
  IQR:    0.52 us (76.57 to 77.10)
  1558 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b3a0>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 245.63 us
  IQR:    0.78 us (245.27 to 246.05)
  487 measurements, 100 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53bf10>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 77.70 us
  IQR:    0.39 us (77.51 to 77.90)
  1534 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4390d0>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 246.54 us
  IQR:    0.81 us (246.20 to 247.01)
  483 measurements, 100 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4390a0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 963.64 us
  IQR:    4.05 us (961.78 to 965.84)
  125 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439130>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 3.85 ms
  IQR:    0.03 ms (3.83 to 3.86)
  311 measurements, 10 runs per measurement, 6 threads

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4391c0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 2.28 ms
  IQR:    0.01 ms (2.28 to 2.29)
  526 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439280>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 36.68 ms
  IQR:    1.10 ms (36.13 to 37.24)
  324 measurements, 1 runs per measurement, 6 threads

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439340>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 61.10 us
  IQR:    0.06 us (61.08 to 61.15)
  196 measurements, 1000 runs per measurement, 6 threads

- Bench upsample linear 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439430>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 906.49 us
  IQR:    0.73 us (906.20 to 906.92)
  133 measurements, 100 runs per measurement, 6 threads

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439520>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 55.80 us
  IQR:    0.68 us (55.61 to 56.29)
  214 measurements, 1000 runs per measurement, 6 threads

- Bench upsample linear 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4395e0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 461.54 us
  IQR:    4.81 us (459.58 to 464.39)
  259 measurements, 100 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4396a0>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 2.33 ms
  IQR:    0.01 ms (2.33 to 2.34)
  513 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439730>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 52.87 ms
  IQR:    1.22 ms (52.06 to 53.28)
  228 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaae07a370>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 78.36 us
  IQR:    0.40 us (78.18 to 78.58)
  1527 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b520>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 571.31 us
  IQR:    1.86 us (570.48 to 572.33)
  209 measurements, 100 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b280>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 79.03 us
  IQR:    0.20 us (78.92 to 79.11)
  150 measurements, 1000 runs per measurement, 6 threads

- Bench upsample linear 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b1c0>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 573.34 us
  IQR:    1.93 us (572.59 to 574.52)
  209 measurements, 100 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b220>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 965.58 us
  IQR:    6.49 us (962.40 to 968.89)
  124 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b160>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 9.38 ms
  IQR:    0.04 ms (9.36 to 9.40)
  128 measurements, 10 runs per measurement, 6 threads

---- END Benchmark linear 2D ----


---- Benchmark linear 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 1d (12 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53bc10>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 103.71 us
  IQR:    0.36 us (103.55 to 103.91)
  1151 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 1d (12 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53bb50>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 192.59 us
  IQR:    0.51 us (192.34 to 192.85)
  614 measurements, 100 runs per measurement, 6 threads

---- END Benchmark linear 1D ----


---- Benchmark linear 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b190>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 1.05 ms
  IQR:    0.01 ms (1.04 to 1.05)
  1142 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b370>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 25.40 ms
  IQR:    0.31 ms (25.33 to 25.64)
  467 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53bc40>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 12.96 ms
  IQR:    0.10 ms (12.91 to 13.02)
  926 measurements, 1 runs per measurement, 6 threads

- Bench upsample linear 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53bc70>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 239.84 ms
  IQR:    0.70 ms (239.52 to 240.22)
  50 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (12 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b5b0>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 380.09 us
  IQR:    3.06 us (378.51 to 381.57)
  316 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 3d (12 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53bac0>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 40.53 ms
  IQR:    0.27 ms (40.40 to 40.67)
  296 measurements, 1 runs per measurement, 6 threads

---- END Benchmark linear 3D ----


---- Benchmark nearest 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e53b040>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 221.30 us
  IQR:    0.85 us (220.95 to 221.80)
  539 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4394f0>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 865.91 us
  IQR:    3.84 us (864.32 to 868.16)
  1378 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4398b0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 265.41 us
  IQR:    0.87 us (264.98 to 265.85)
  445 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439970>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 1.05 ms
  IQR:    0.00 ms (1.04 to 1.05)
  1137 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439190>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 241.08 us
  IQR:    1.16 us (240.63 to 241.79)
  492 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4393d0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 887.62 us
  IQR:    5.77 us (885.28 to 891.06)
  1307 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439460>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 278.59 us
  IQR:    1.01 us (278.13 to 279.15)
  428 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439820>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 1.06 ms
  IQR:    0.00 ms (1.06 to 1.06)
  1119 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439b20>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 144.49 us
  IQR:    0.47 us (144.28 to 144.75)
  827 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439790>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 558.67 us
  IQR:    1.70 us (558.06 to 559.76)
  213 measurements, 100 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439310>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 149.25 us
  IQR:    0.77 us (148.91 to 149.68)
  792 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4395b0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 584.71 us
  IQR:    0.85 us (584.33 to 585.17)
  204 measurements, 100 runs per measurement, 6 threads

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439880>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 1.43 ms
  IQR:    0.01 ms (1.42 to 1.43)
  840 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4397f0>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 31.49 ms
  IQR:    1.08 ms (30.95 to 32.02)
  380 measurements, 1 runs per measurement, 6 threads

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439a30>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 142.69 us
  IQR:    0.96 us (142.27 to 143.23)
  836 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439ac0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 8.05 ms
  IQR:    0.05 ms (8.03 to 8.08)
  148 measurements, 10 runs per measurement, 6 threads

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439670>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 18.02 us
  IQR:    0.07 us (17.99 to 18.06)
  650 measurements, 1000 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439370>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 535.22 us
  IQR:    5.03 us (533.37 to 538.40)
  224 measurements, 100 runs per measurement, 6 threads

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439400>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 10.23 us
  IQR:    0.10 us (10.18 to 10.28)
  1170 measurements, 1000 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439940>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 95.85 us
  IQR:    0.22 us (95.75 to 95.96)
  1248 measurements, 100 runs per measurement, 6 threads

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4394c0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 13.91 us
  IQR:    0.07 us (13.88 to 13.95)
  861 measurements, 1000 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439580>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 83.20 us
  IQR:    0.28 us (83.06 to 83.34)
  1436 measurements, 100 runs per measurement, 6 threads

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439b80>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 8.19 us
  IQR:    0.07 us (8.16 to 8.23)
  1454 measurements, 1000 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439640>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 52.80 us
  IQR:    0.08 us (52.76 to 52.85)
  227 measurements, 1000 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439be0>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 4.87 ms
  IQR:    0.08 ms (4.83 to 4.91)
  2451 measurements, 1 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439fd0>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 77.69 ms
  IQR:    0.91 ms (77.14 to 78.05)
  154 measurements, 1 runs per measurement, 6 threads

Input tensor: [32, 64, 128, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439e50>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 79.98 us
  IQR:    0.42 us (79.80 to 80.22)
  1475 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439700>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 4.12 ms
  IQR:    0.01 ms (4.12 to 4.13)
  289 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439e80>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 223.00 us
  IQR:    0.87 us (222.63 to 223.50)
  538 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439c10>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 2.11 ms
  IQR:    0.01 ms (2.11 to 2.11)
  567 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e4392b0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 266.84 us
  IQR:    0.89 us (266.46 to 267.35)
  448 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439d90>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 2.55 ms
  IQR:    0.01 ms (2.54 to 2.55)
  469 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439850>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 277.16 us
  IQR:    0.83 us (276.82 to 277.66)
  432 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fca8e439dc0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 2.19 ms
  IQR:    0.01 ms (2.18 to 2.20)
  545 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9040>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 293.44 us
  IQR:    0.82 us (293.07 to 293.89)
  408 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9070>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 2.57 ms
  IQR:    0.01 ms (2.57 to 2.58)
  464 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9130>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 145.78 us
  IQR:    0.50 us (145.55 to 146.05)
  815 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9160>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 1.35 ms
  IQR:    0.01 ms (1.35 to 1.36)
  883 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae91f0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 150.29 us
  IQR:    0.48 us (150.08 to 150.56)
  796 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9280>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 1.42 ms
  IQR:    0.00 ms (1.42 to 1.42)
  842 measurements, 10 runs per measurement, 6 threads

---- END Benchmark nearest 2D ----


---- Benchmark nearest 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (12 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9340>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 292.77 us
  IQR:    0.86 us (292.41 to 293.27)
  408 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 1d (12 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9400>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 578.18 us
  IQR:    1.41 us (577.73 to 579.13)
  206 measurements, 100 runs per measurement, 6 threads

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (12 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae94f0>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 366.21 us
  IQR:    1.43 us (365.68 to 367.11)
  325 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 1d (12 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae95e0>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 723.94 us
  IQR:    4.76 us (721.43 to 726.19)
  1643 measurements, 10 runs per measurement, 6 threads

---- END Benchmark nearest 1D ----


---- Benchmark nearest 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae96a0>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 2.68 ms
  IQR:    0.01 ms (2.68 to 2.69)
  446 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9760>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 43.85 ms
  IQR:    0.10 ms (43.81 to 43.92)
  273 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae97f0>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 3.08 ms
  IQR:    0.02 ms (3.08 to 3.10)
  3871 measurements, 1 runs per measurement, 6 threads

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9250>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 39.81 ms
  IQR:    0.07 ms (39.78 to 39.85)
  301 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9310>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 1.40 ms
  IQR:    0.01 ms (1.39 to 1.40)
  856 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae93d0>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 30.40 ms
  IQR:    0.10 ms (30.35 to 30.46)
  393 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae94c0>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 1.48 ms
  IQR:    0.00 ms (1.48 to 1.48)
  798 measurements, 10 runs per measurement, 6 threads

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae95b0>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 20.65 ms
  IQR:    0.07 ms (20.61 to 20.68)
  579 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9670>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 51.17 us
  IQR:    0.15 us (51.12 to 51.26)
  234 measurements, 1000 runs per measurement, 6 threads

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9730>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 8.71 ms
  IQR:    0.08 ms (8.67 to 8.75)
  137 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9490>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 70.58 us
  IQR:    0.29 us (70.45 to 70.74)
  1695 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9580>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 3.14 ms
  IQR:    0.01 ms (3.14 to 3.15)
  380 measurements, 10 runs per measurement, 6 threads

---- END Benchmark nearest 3D ----


---- Benchmark cubic 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9640>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.22 ms
  IQR:    0.02 ms (6.22 to 6.23)
  193 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9700>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 24.18 ms
  IQR:    0.15 ms (24.10 to 24.25)
  496 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae97c0>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.26 ms
  IQR:    0.02 ms (6.25 to 6.27)
  192 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9880>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 24.23 ms
  IQR:    0.15 ms (24.14 to 24.29)
  496 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae98e0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.27 ms
  IQR:    0.02 ms (6.26 to 6.28)
  192 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9940>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 24.22 ms
  IQR:    0.15 ms (24.13 to 24.28)
  496 measurements, 1 runs per measurement, 6 threads

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae99a0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 503.71 ms
  IQR:    17.29 ms (497.15 to 514.45)
  24 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9a00>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 7.17 s
  2 measurements, 1 runs per measurement, 6 threads

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9a60>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 10.03 ms
  IQR:    0.03 ms (10.02 to 10.05)
  120 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9ac0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 148.89 ms
  IQR:    0.54 ms (148.63 to 149.17)
  81 measurements, 1 runs per measurement, 6 threads

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9b20>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 4.27 ms
  IQR:    0.02 ms (4.26 to 4.28)
  281 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9e80>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 61.22 ms
  IQR:    0.52 ms (60.93 to 61.45)
  196 measurements, 1 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9df0>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 467.87 ms
  IQR:    1.59 ms (467.36 to 468.95)
  26 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9b80>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 7.59 s
  2 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9fa0>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.26 ms
  IQR:    0.02 ms (6.24 to 6.26)
  192 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9ee0>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 58.59 ms
  IQR:    0.37 ms (58.45 to 58.82)
  204 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9430>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.36 ms
  IQR:    0.02 ms (6.36 to 6.37)
  189 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9f70>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 58.74 ms
  IQR:    0.30 ms (58.59 to 58.89)
  205 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae92b0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.39 ms
  IQR:    0.02 ms (6.38 to 6.40)
  188 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7fcaa4ae9dc0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 58.73 ms
  IQR:    0.53 ms (58.51 to 59.04)
  205 measurements, 1 runs per measurement, 6 threads

---- END Benchmark cubic 2D ----



No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
__version__ = 1.9.0a0+git8518b0e
debug = False
cuda = None
git_version = 8518b0ee55a3b04353f9ea3b39d142bf10359bf4
hip = None


Uses tests cases:  ['linear:2dcf', 'linear:2dcl', 'linear:3dcf', 'linear:3dcl', 'linear:1d', 'nearest:2dcf', 'nearest:2dcl', 'nearest:3dcf', 'nearest:3dcl', 'nearest:1d', 'cubic:2dcf', 'cubic:2dcl', 'cubic:3dcf', 'cubic:3dcl', 'cubic:1d']
Torch config: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - CPU capability usage: AVX2
  - Build settings: BUILD_TYPE=Release, CXX_COMPILER=/usr/lib/ccache/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=0, USE_CUDNN=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=0, USE_OPENMP=ON, 

Num threads: 1


---- Benchmark linear 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3d90>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 333.59 us
  IQR:    1.86 us (332.56 to 334.42)
  360 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3e80>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 1.26 ms
  IQR:    0.01 ms (1.26 to 1.27)
  951 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3d30>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 337.16 us
  IQR:    2.05 us (336.04 to 338.09)
  356 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d070>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 1.26 ms
  IQR:    0.01 ms (1.26 to 1.27)
  949 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d040>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 963.31 us
  IQR:    4.17 us (961.66 to 965.82)
  125 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d100>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 3.84 ms
  IQR:    0.02 ms (3.83 to 3.85)
  313 measurements, 10 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d130>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 5.88 ms
  IQR:    0.03 ms (5.87 to 5.90)
  204 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d1c0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 111.62 ms
  IQR:    0.33 ms (111.42 to 111.76)
  108 measurements, 1 runs per measurement, 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d250>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 110.08 us
  IQR:    0.49 us (109.86 to 110.36)
  109 measurements, 1000 runs per measurement, 1 thread

- Bench upsample linear 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d310>
upsample_bilinear2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 1.66 ms
  IQR:    0.02 ms (1.65 to 1.67)
  723 measurements, 10 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d3d0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 55.51 us
  IQR:    0.39 us (55.31 to 55.70)
  217 measurements, 1000 runs per measurement, 1 thread

- Bench upsample linear 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d4c0>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 477.05 us
  IQR:    6.40 us (474.52 to 480.92)
  252 measurements, 100 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d5b0>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 10.28 ms
  IQR:    0.04 ms (10.27 to 10.31)
  117 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d670>
upsample_bilinear2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 208.77 ms
  IQR:    0.58 ms (208.47 to 209.04)
  58 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feecf0d5340>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 347.10 us
  IQR:    2.24 us (345.86 to 348.10)
  346 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3df0>
upsample_bilinear2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 3.05 ms
  IQR:    0.02 ms (3.04 to 3.06)
  394 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3c70>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 348.50 us
  IQR:    2.06 us (347.33 to 349.39)
  345 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3af0>
upsample_bilinear2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 3.05 ms
  IQR:    0.02 ms (3.04 to 3.06)
  393 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3b50>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 963.40 us
  IQR:    3.14 us (962.00 to 965.14)
  125 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3a90>
upsample_bilinear2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 9.37 ms
  IQR:    0.04 ms (9.35 to 9.40)
  128 measurements, 10 runs per measurement, 1 thread

---- END Benchmark linear 2D ----


---- Benchmark linear 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 1d (12 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3820>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 514.43 us
  IQR:    2.42 us (513.24 to 515.65)
  234 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 1d (12 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3760>
upsample_linear1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 1.00 ms
  IQR:    0.00 ms (1.00 to 1.00)
  120 measurements, 100 runs per measurement, 1 thread

---- END Benchmark linear 1D ----


---- Benchmark linear 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3ac0>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 5.46 ms
  IQR:    0.03 ms (5.45 to 5.47)
  220 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3a00>
upsample_trilinear3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 114.83 ms
  IQR:    0.32 ms (114.64 to 114.96)
  105 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3850>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 12.96 ms
  IQR:    0.10 ms (12.92 to 13.02)
  926 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3880>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 239.24 ms
  IQR:    0.90 ms (238.98 to 239.88)
  51 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (12 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda38e0>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 371.20 us
  IQR:    2.68 us (369.87 to 372.55)
  323 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 3d (12 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda36d0>
upsample_trilinear3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 40.28 ms
  IQR:    0.20 ms (40.19 to 40.39)
  298 measurements, 1 runs per measurement, 1 thread

---- END Benchmark linear 3D ----


---- Benchmark nearest 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbda3bb0>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.21 ms
  IQR:    0.01 ms (1.20 to 1.21)
  996 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d3a0>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 4.79 ms
  IQR:    0.02 ms (4.77 to 4.80)
  251 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d880>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.46 ms
  IQR:    0.01 ms (1.45 to 1.46)
  825 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d940>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 5.80 ms
  IQR:    0.03 ms (5.78 to 5.81)
  207 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d730>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.29 ms
  IQR:    0.01 ms (1.28 to 1.29)
  932 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d640>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 4.87 ms
  IQR:    0.02 ms (4.86 to 4.88)
  247 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d340>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.50 ms
  IQR:    0.01 ms (1.50 to 1.51)
  800 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d790>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 5.84 ms
  IQR:    0.03 ms (5.82 to 5.85)
  206 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9daf0>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 746.55 us
  IQR:    3.93 us (744.82 to 748.74)
  161 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d760>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 2.96 ms
  IQR:    0.02 ms (2.95 to 2.97)
  406 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d220>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 795.99 us
  IQR:    3.89 us (794.17 to 798.06)
  151 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d490>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 3.17 ms
  IQR:    0.02 ms (3.15 to 3.17)
  380 measurements, 10 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d850>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 3.41 ms
  IQR:    0.01 ms (3.41 to 3.42)
  352 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d7f0>
upsample_nearest2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 101.51 ms
  IQR:    0.21 ms (101.42 to 101.63)
  119 measurements, 1 runs per measurement, 1 thread

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9da00>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 675.77 us
  IQR:    3.11 us (674.20 to 677.31)
  178 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9da90>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 27.80 ms
  IQR:    0.13 ms (27.73 to 27.86)
  432 measurements, 1 runs per measurement, 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d580>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 74.82 us
  IQR:    0.24 us (74.71 to 74.95)
  161 measurements, 1000 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d280>
upsample_nearest2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 1.61 ms
  IQR:    0.01 ms (1.61 to 1.62)
  745 measurements, 10 runs per measurement, 1 thread

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d2e0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 39.56 us
  IQR:    0.26 us (39.43 to 39.69)
  304 measurements, 1000 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d910>
upsample_nearest2d channels_last non-contiguous torch.uint8: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 490.78 us
  IQR:    2.54 us (489.31 to 491.86)
  245 measurements, 100 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d700>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 39.39 us
  IQR:    0.18 us (39.30 to 39.49)
  305 measurements, 1000 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d460>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 423.46 us
  IQR:    1.79 us (422.81 to 424.60)
  284 measurements, 100 runs per measurement, 1 thread

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9db50>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 22.34 us
  IQR:    0.12 us (22.27 to 22.40)
  538 measurements, 1000 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d550>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 249.74 us
  IQR:    1.69 us (248.83 to 250.53)
  481 measurements, 100 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9dbb0>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 26.50 ms
  IQR:    0.18 ms (26.41 to 26.60)
  453 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d610>
upsample_nearest2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 353.81 ms
  IQR:    1.85 ms (353.14 to 355.00)
  34 measurements, 1 runs per measurement, 1 thread

Input tensor: [32, 64, 128, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9dc70>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 426.73 us
  IQR:    2.71 us (425.61 to 428.32)
  281 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9dd90>
upsample_nearest2d channels_last non-contiguous torch.uint8: [32, 64, 128, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 15.09 ms
  IQR:    0.09 ms (15.05 to 15.14)
  795 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9dfa0>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.22 ms
  IQR:    0.01 ms (1.21 to 1.22)
  988 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d820>
upsample_nearest2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 11.67 ms
  IQR:    0.05 ms (11.65 to 11.69)
  103 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d190>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.46 ms
  IQR:    0.01 ms (1.46 to 1.47)
  820 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d6d0>
upsample_nearest2d channels_first contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 14.14 ms
  IQR:    0.11 ms (14.09 to 14.19)
  849 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9dca0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.49 ms
  IQR:    0.01 ms (1.48 to 1.50)
  805 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc9d6a0>
upsample_nearest2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 12.05 ms
  IQR:    0.11 ms (12.00 to 12.11)
  996 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04070>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 1.57 ms
  IQR:    0.01 ms (1.57 to 1.58)
  762 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04040>
upsample_nearest2d channels_first non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 14.26 ms
  IQR:    0.11 ms (14.20 to 14.32)
  841 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04100>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 750.20 us
  IQR:    3.18 us (748.25 to 751.43)
  160 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04130>
upsample_nearest2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 7.22 ms
  IQR:    0.03 ms (7.20 to 7.23)
  167 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc041c0>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 798.46 us
  IQR:    4.15 us (796.31 to 800.46)
  151 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04250>
upsample_nearest2d channels_last non-contiguous torch.uint8: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 7.71 ms
  IQR:    0.03 ms (7.69 to 7.73)
  156 measurements, 10 runs per measurement, 1 thread

---- END Benchmark nearest 2D ----


---- Benchmark nearest 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (12 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04310>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 1.60 ms
  IQR:    0.01 ms (1.60 to 1.61)
  749 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 1d (12 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc043d0>
upsample_nearest1d channels_first contiguous torch.float32: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 3.19 ms
  IQR:    0.02 ms (3.18 to 3.20)
  376 measurements, 10 runs per measurement, 1 thread

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (12 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc044c0>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [256]
1.9.0a0+git8518b0e
  Median: 2.01 ms
  IQR:    0.02 ms (2.00 to 2.02)
  597 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 1d (12 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc045b0>
upsample_nearest1d channels_first contiguous torch.uint8: [4, 512, 320] -> [512]
1.9.0a0+git8518b0e
  Median: 3.99 ms
  IQR:    0.02 ms (3.98 to 4.01)
  301 measurements, 10 runs per measurement, 1 thread

---- END Benchmark nearest 1D ----


---- Benchmark nearest 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04670>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 14.80 ms
  IQR:    0.12 ms (14.74 to 14.86)
  810 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04730>
upsample_nearest3d channels_first contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 222.63 ms
  IQR:    0.51 ms (222.35 to 222.86)
  54 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc047c0>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 17.15 ms
  IQR:    0.12 ms (17.10 to 17.22)
  699 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04220>
upsample_nearest3d channels_first contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 221.06 ms
  IQR:    0.61 ms (220.72 to 221.33)
  55 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc042e0>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 7.70 ms
  IQR:    0.04 ms (7.68 to 7.72)
  156 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc043a0>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 142.66 ms
  IQR:    0.45 ms (142.49 to 142.94)
  85 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04490>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git8518b0e
  Median: 8.15 ms
  IQR:    0.05 ms (8.13 to 8.17)
  148 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04580>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git8518b0e
  Median: 114.49 ms
  IQR:    0.53 ms (114.25 to 114.78)
  105 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04640>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 251.70 us
  IQR:    1.81 us (250.88 to 252.68)
  476 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04700>
upsample_nearest3d channels_last non-contiguous torch.float32: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 31.42 ms
  IQR:    0.13 ms (31.37 to 31.49)
  382 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 16, 32, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (12 min_run_time) - downsampling to [16, 32, 32]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04460>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 16, 32, 64, 64] -> [16, 32, 32]
1.9.0a0+git8518b0e
  Median: 364.53 us
  IQR:    2.11 us (363.30 to 365.41)
  329 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 3d (12 min_run_time) - upsampling to [64, 128, 128]
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04550>
upsample_nearest3d channels_last non-contiguous torch.uint8: [1, 16, 32, 64, 64] -> [64, 128, 128]
1.9.0a0+git8518b0e
  Median: 17.26 ms
  IQR:    0.15 ms (17.20 to 17.35)
  695 measurements, 1 runs per measurement, 1 thread

---- END Benchmark nearest 3D ----


---- Benchmark cubic 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04610>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 5.97 ms
  IQR:    0.03 ms (5.96 to 5.99)
  201 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc046d0>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 23.81 ms
  IQR:    0.17 ms (23.73 to 23.90)
  504 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04790>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.05 ms
  IQR:    0.04 ms (6.03 to 6.07)
  198 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04850>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 23.89 ms
  IQR:    0.19 ms (23.82 to 24.01)
  502 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc048b0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.11 ms
  IQR:    0.03 ms (6.10 to 6.13)
  197 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04910>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git8518b0e
  Median: 23.99 ms
  IQR:    0.20 ms (23.88 to 24.09)
  500 measurements, 1 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04970>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 512.48 ms
  IQR:    10.11 ms (507.66 to 517.77)
  24 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc049d0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 10.71 s
  2 measurements, 1 runs per measurement, 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04a30>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 10.83 ms
  IQR:    0.03 ms (10.82 to 10.85)
  111 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04a90>
upsample_bicubic2d channels_last non-contiguous torch.float32: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 152.68 ms
  IQR:    0.43 ms (152.47 to 152.90)
  79 measurements, 1 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04af0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 4.59 ms
  IQR:    0.03 ms (4.58 to 4.61)
  261 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04b50>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 62.08 ms
  IQR:    0.37 ms (61.84 to 62.21)
  194 measurements, 1 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04c10>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git8518b0e
  Median: 485.42 ms
  IQR:    3.74 ms (484.25 to 487.99)
  25 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04cd0>
upsample_bicubic2d channels_first contiguous torch.float32: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git8518b0e
  Median: 7.93 s
  2 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04d90>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 5.98 ms
  IQR:    0.03 ms (5.97 to 6.00)
  201 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04280>
upsample_bicubic2d channels_first contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 58.08 ms
  IQR:    0.30 ms (57.92 to 58.22)
  207 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04340>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.27 ms
  IQR:    0.03 ms (6.25 to 6.28)
  192 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04bb0>
upsample_bicubic2d channels_first non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 58.58 ms
  IQR:    0.33 ms (58.38 to 58.71)
  205 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (12 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc04f40>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git8518b0e
  Median: 6.35 ms
  IQR:    0.03 ms (6.33 to 6.37)
  189 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (12 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7feebbc040d0>
upsample_bicubic2d channels_last non-contiguous torch.float32: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git8518b0e
  Median: 58.66 ms
  IQR:    0.35 ms (58.51 to 58.86)
  205 measurements, 1 runs per measurement, 1 thread

---- END Benchmark cubic 2D ----
