
No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
__version__ = 1.9.0a0+git3350296
debug = False
cuda = None
git_version = 33502964635186c126bd153ab8ff8c194455892d
hip = None


Uses tests cases:  ['linear:2dcf', 'linear:2dcl', 'linear:3dcf', 'linear:3dcl', 'linear:1d', 'nearest:2dcf', 'nearest:2dcl', 'nearest:3dcf', 'nearest:3dcl', 'nearest:1d', 'cubic:2dcf', 'cubic:2dcl', 'cubic:3dcf', 'cubic:3dcl', 'cubic:1d']
Torch config: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - CPU capability usage: AVX2
  - Build settings: BUILD_TYPE=Release, CXX_COMPILER=/usr/lib/ccache/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=0, USE_CUDNN=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=0, USE_OPENMP=ON, 

Num threads: 6


---- Benchmark linear 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769fd0>
upsample_bilinear2d channels_first contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 123.80 us
  IQR:    0.98 us (123.45 to 124.43)
  767 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d57697f0>
upsample_bilinear2d channels_first contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 430.83 us
  IQR:    4.54 us (430.45 to 435.00)
  2086 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769fa0>
upsample_bilinear2d channels_first non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 125.23 us
  IQR:    2.29 us (124.77 to 127.07)
  760 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769bb0>
upsample_bilinear2d channels_first non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 431.84 us
  IQR:    2.43 us (431.29 to 433.72)
  222 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769940>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 203.99 us
  IQR:    1.87 us (203.29 to 205.16)
  471 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769cd0>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 26.88 us
  IQR:    0.17 us (26.82 to 27.00)
  347 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769c70>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 749.81 us
  IQR:    5.04 us (748.28 to 753.32)
  1282 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769d60>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 62.79 us
  IQR:    0.38 us (62.65 to 63.03)
  153 measurements, 100 runs per measurement, 6 threads

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d57696d0>
upsample_bilinear2d channels_last non-contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 2.67 ms
  IQR:    0.08 ms (2.65 to 2.73)
  355 measurements, 1 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769d30>
upsample_bilinear2d channels_last non-contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 67.51 ms
  IQR:    0.60 ms (67.37 to 67.97)
  15 measurements, 1 runs per measurement, 6 threads

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769700>
upsample_bilinear2d channels_last non-contiguous: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 160.78 us
  IQR:    2.58 us (160.15 to 162.73)
  586 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769190>
upsample_bilinear2d channels_last non-contiguous: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 2.30 ms
  IQR:    0.04 ms (2.29 to 2.32)
  415 measurements, 1 runs per measurement, 6 threads

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d57691f0>
upsample_bilinear2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 124.10 us
  IQR:    0.87 us (123.92 to 124.79)
  799 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769100>
upsample_bilinear2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 184.18 us
  IQR:    10.47 us (181.00 to 191.47)
  530 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769310>
upsample_bilinear2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 1.14 ms
  IQR:    0.01 ms (1.14 to 1.14)
  863 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73f519b1c0>
upsample_bilinear2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 1.51 ms
  IQR:    0.10 ms (1.45 to 1.54)
  657 measurements, 1 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575afa0>
upsample_bilinear2d channels_first contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 2.77 ms
  IQR:    0.06 ms (2.75 to 2.82)
  337 measurements, 1 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575af70>
upsample_bilinear2d channels_first contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 67.16 ms
  IQR:    1.77 ms (66.76 to 68.53)
  15 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575aeb0>
upsample_bilinear2d channels_first contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 126.18 us
  IQR:    0.88 us (125.96 to 126.83)
  750 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575acd0>
upsample_bilinear2d channels_first contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 1.02 ms
  IQR:    0.01 ms (1.02 to 1.03)
  935 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575ae20>
upsample_bilinear2d channels_first non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 127.19 us
  IQR:    107.88 us (126.55 to 234.44)
  610 measurements, 10 runs per measurement, 6 threads
  WARNING: Interquartile range is 84.8% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575ac40>
upsample_bilinear2d channels_first non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 1.03 ms
  IQR:    0.02 ms (1.02 to 1.04)
  880 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575ac70>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 210.54 us
  IQR:    2.20 us (209.46 to 211.66)
  435 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575ad60>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 36.78 us
  IQR:    0.16 us (36.72 to 36.88)
  266 measurements, 100 runs per measurement, 6 threads

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575abe0>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 1.85 ms
  IQR:    0.01 ms (1.85 to 1.86)
  513 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575aa90>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 143.48 us
  IQR:    1.24 us (143.03 to 144.28)
  681 measurements, 10 runs per measurement, 6 threads

---- END Benchmark linear 2D ----


---- Benchmark linear 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 1d (1 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575ab20>
upsample_linear1d channels_first contiguous: [4, 512, 320] -> [256]
1.9.0a0+git3350296
  Median: 100.58 us
  IQR:    2.17 us (100.40 to 102.57)
  868 measurements, 10 runs per measurement, 6 threads

- Bench upsample linear 1d (1 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d575abb0>
upsample_linear1d channels_first contiguous: [4, 512, 320] -> [512]
1.9.0a0+git3350296
  Median: 187.13 us
  IQR:    4.46 us (186.43 to 190.90)
  455 measurements, 10 runs per measurement, 6 threads

---- END Benchmark linear 1D ----


---- Benchmark linear 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769af0>
upsample_trilinear3d channels_first contiguous: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git3350296
  Median: 2.08 ms
  IQR:    0.03 ms (2.08 to 2.11)
  460 measurements, 1 runs per measurement, 6 threads

- Bench upsample linear 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769910>
upsample_trilinear3d channels_first contiguous: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git3350296
  Median: 43.00 ms
  IQR:    0.55 ms (42.92 to 43.47)
  22 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769340>
upsample_trilinear3d channels_last non-contiguous: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git3350296
  Median: 3.04 ms
  IQR:    0.08 ms (2.98 to 3.07)
  307 measurements, 1 runs per measurement, 6 threads

- Bench upsample linear 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769dc0>
upsample_trilinear3d channels_last non-contiguous: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git3350296
  Median: 56.93 ms
  IQR:    0.37 ms (56.87 to 57.23)
  18 measurements, 1 runs per measurement, 6 threads

---- END Benchmark linear 3D ----


---- Benchmark nearest 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d57692b0>
upsample_nearest2d channels_first contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 32.89 us
  IQR:    0.21 us (32.80 to 33.01)
  290 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d57693a0>
upsample_nearest2d channels_first contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 78.47 us
  IQR:    0.88 us (78.33 to 79.22)
  1233 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769610>
upsample_nearest2d channels_first non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 54.51 us
  IQR:    21.37 us (33.27 to 54.63)
  227 measurements, 100 runs per measurement, 6 threads
  WARNING: Interquartile range is 39.2% of the median measurement.
           This suggests significant environmental influence.

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769670>
upsample_nearest2d channels_first non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 79.63 us
  IQR:    2.68 us (79.30 to 81.99)
  1095 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769e20>
upsample_nearest2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 67.99 us
  IQR:    1.04 us (67.55 to 68.59)
  1359 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769730>
upsample_nearest2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 77.65 us
  IQR:    3.36 us (74.97 to 78.33)
  129 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769ee0>
upsample_nearest2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 221.58 us
  IQR:    2.48 us (220.43 to 222.91)
  449 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769400>
upsample_nearest2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 72.51 us
  IQR:    0.79 us (72.18 to 72.96)
  1351 measurements, 10 runs per measurement, 6 threads

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769a90>
upsample_nearest2d channels_last non-contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 1.40 ms
  IQR:    0.02 ms (1.39 to 1.42)
  698 measurements, 1 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769520>
upsample_nearest2d channels_last non-contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 32.05 ms
  IQR:    0.71 ms (31.80 to 32.51)
  31 measurements, 1 runs per measurement, 6 threads

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769e80>
upsample_nearest2d channels_last non-contiguous: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 27.78 us
  IQR:    0.14 us (27.71 to 27.86)
  357 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d57699d0>
upsample_nearest2d channels_last non-contiguous: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 554.94 us
  IQR:    6.03 us (553.19 to 559.22)
  178 measurements, 10 runs per measurement, 6 threads

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769580>
upsample_nearest2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 23.93 us
  IQR:    0.21 us (23.84 to 24.05)
  410 measurements, 100 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73d57691c0>
upsample_nearest2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 38.32 us
  IQR:    1.23 us (37.12 to 38.35)
  262 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769f70>
upsample_nearest2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 92.84 us
  IQR:    0.73 us (92.69 to 93.42)
  1042 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769490>
upsample_nearest2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 401.52 us
  IQR:    4.73 us (400.72 to 405.45)
  247 measurements, 10 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d57695e0>
upsample_nearest2d channels_first contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 2.22 ms
  IQR:    0.02 ms (2.21 to 2.23)
  440 measurements, 1 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d57692e0>
upsample_nearest2d channels_first contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 38.35 ms
  IQR:    0.59 ms (38.17 to 38.76)
  27 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73d5769070>
upsample_nearest2d channels_first contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 36.05 us
  IQR:    0.17 us (35.99 to 36.16)
  273 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02070>
upsample_nearest2d channels_first contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 168.46 us
  IQR:    1.15 us (167.86 to 169.01)
  569 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02040>
upsample_nearest2d channels_first non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 36.10 us
  IQR:    0.20 us (36.03 to 36.23)
  267 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02100>
upsample_nearest2d channels_first non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 170.54 us
  IQR:    1.36 us (169.84 to 171.20)
  569 measurements, 10 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02130>
upsample_nearest2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 65.73 us
  IQR:    0.83 us (65.48 to 66.31)
  1463 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02250>
upsample_nearest2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 83.84 us
  IQR:    0.50 us (83.81 to 84.31)
  118 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe021f0>
upsample_nearest2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 504.49 us
  IQR:    12.70 us (498.90 to 511.60)
  1921 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe022b0>
upsample_nearest2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 139.09 us
  IQR:    1.21 us (138.68 to 139.90)
  701 measurements, 10 runs per measurement, 6 threads

---- END Benchmark nearest 2D ----


---- Benchmark nearest 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (1 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02370>
upsample_nearest1d channels_first contiguous: [4, 512, 320] -> [256]
1.9.0a0+git3350296
  Median: 52.37 us
  IQR:    0.20 us (52.29 to 52.48)
  183 measurements, 100 runs per measurement, 6 threads

- Bench upsample nearest 1d (1 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02580>
upsample_nearest1d channels_first contiguous: [4, 512, 320] -> [512]
1.9.0a0+git3350296
  Median: 87.37 us
  IQR:    4.39 us (86.83 to 91.21)
  1038 measurements, 10 runs per measurement, 6 threads

---- END Benchmark nearest 1D ----


---- Benchmark nearest 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02430>
upsample_nearest3d channels_first contiguous: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git3350296
  Median: 202.60 us
  IQR:    4.37 us (201.34 to 205.71)
  4650 measurements, 1 runs per measurement, 6 threads

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02670>
upsample_nearest3d channels_first contiguous: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git3350296
  Median: 12.75 ms
  IQR:    0.18 ms (12.67 to 12.86)
  78 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe026d0>
upsample_nearest3d channels_last non-contiguous: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git3350296
  Median: 468.31 us
  IQR:    7.06 us (466.29 to 473.35)
  2014 measurements, 1 runs per measurement, 6 threads

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe027c0>
upsample_nearest3d channels_last non-contiguous: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git3350296
  Median: 18.13 ms
  IQR:    0.19 ms (18.02 to 18.22)
  53 measurements, 1 runs per measurement, 6 threads

---- END Benchmark nearest 3D ----


---- Benchmark cubic 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe025b0>
upsample_bicubic2d channels_first contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 466.01 us
  IQR:    3.32 us (465.15 to 468.47)
  212 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe022e0>
upsample_bicubic2d channels_first contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 1.72 ms
  IQR:    0.01 ms (1.71 to 1.73)
  526 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe028e0>
upsample_bicubic2d channels_first non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 465.20 us
  IQR:    1.82 us (464.78 to 466.60)
  214 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe029a0>
upsample_bicubic2d channels_first non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 1.71 ms
  IQR:    0.01 ms (1.71 to 1.72)
  532 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02a30>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 467.51 us
  IQR:    2.11 us (466.74 to 468.86)
  206 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02310>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 62.96 us
  IQR:    0.55 us (62.82 to 63.37)
  1570 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02ac0>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 1.72 ms
  IQR:    0.01 ms (1.71 to 1.72)
  557 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02b20>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 145.90 us
  IQR:    0.54 us (145.67 to 146.21)
  683 measurements, 10 runs per measurement, 6 threads

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02af0>
upsample_bicubic2d channels_last non-contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 18.53 ms
  IQR:    0.26 ms (18.45 to 18.70)
  53 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe026a0>
upsample_bicubic2d channels_last non-contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 205.27 ms
  IQR:    2.29 ms (204.86 to 207.15)
  5 measurements, 1 runs per measurement, 6 threads

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02b80>
upsample_bicubic2d channels_last non-contiguous: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 1.05 ms
  IQR:    0.01 ms (1.04 to 1.05)
  941 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02790>
upsample_bicubic2d channels_last non-contiguous: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 10.08 ms
  IQR:    0.03 ms (10.07 to 10.10)
  97 measurements, 1 runs per measurement, 6 threads

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02280>
upsample_bicubic2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 788.32 us
  IQR:    4.40 us (785.68 to 790.09)
  1249 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02700>
upsample_bicubic2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 643.94 us
  IQR:    32.26 us (616.29 to 648.55)
  156 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02d90>
upsample_bicubic2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 5.06 ms
  IQR:    0.01 ms (5.06 to 5.07)
  190 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02d60>
upsample_bicubic2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 3.65 ms
  IQR:    0.04 ms (3.63 to 3.67)
  274 measurements, 1 runs per measurement, 6 threads

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02eb0>
upsample_bicubic2d channels_first contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 9.19 ms
  IQR:    0.07 ms (9.15 to 9.21)
  109 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe024c0>
upsample_bicubic2d channels_first contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 173.77 ms
  IQR:    3.15 ms (171.54 to 174.69)
  6 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02f10>
upsample_bicubic2d channels_first contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 465.92 us
  IQR:    1.23 us (465.30 to 466.53)
  2133 measurements, 1 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02e50>
upsample_bicubic2d channels_first contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 4.11 ms
  IQR:    0.03 ms (4.10 to 4.13)
  235 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02730>
upsample_bicubic2d channels_first non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 466.08 us
  IQR:    1.99 us (465.55 to 467.54)
  204 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02c40>
upsample_bicubic2d channels_first non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 4.11 ms
  IQR:    0.04 ms (4.10 to 4.14)
  230 measurements, 1 runs per measurement, 6 threads

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02f70>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 471.99 us
  IQR:    2.59 us (470.46 to 473.05)
  209 measurements, 10 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02460>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 76.83 us
  IQR:    0.74 us (76.63 to 77.37)
  1252 measurements, 10 runs per measurement, 6 threads

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02520>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 4.12 ms
  IQR:    0.05 ms (4.10 to 4.15)
  234 measurements, 1 runs per measurement, 6 threads
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f73ebe02220>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 310.44 us
  IQR:    2.65 us (309.49 to 312.14)
  316 measurements, 10 runs per measurement, 6 threads

---- END Benchmark cubic 2D ----


opencv version: 4.5.1
numpy version: 1.20.1



General configuration for OpenCV 4.5.1 =====================================
  Version control:               4.5.1

  Platform:
    Timestamp:                   2021-01-02T13:26:00Z
    Host:                        Linux 4.15.0-1077-gcp x86_64
    CMake:                       3.18.4
    CMake generator:             Unix Makefiles
    CMake build tool:            /bin/gmake
    Configuration:               Release

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2 AVX512_SKX
      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX
      SSE4_1 (15 files):         + SSSE3 SSE4_1
      SSE4_2 (1 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
      FP16 (0 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (4 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (29 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2
      AVX512_SKX (4 files):      + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2 AVX_512F AVX512_COMMON AVX512_SKX

  C/C++:
    Built as dynamic libs?:      NO
    C++ standard:                11
    C++ Compiler:                /usr/lib/ccache/compilers/c++  (ver 9.3.1)
    C++ flags (Release):         -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
    C++ flags (Debug):           -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
    C Compiler:                  /usr/lib/ccache/compilers/cc
    C flags (Release):           -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Wno-comment -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG
    C flags (Debug):             -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Wno-comment -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG
    Linker flags (Release):      -Wl,--exclude-libs,libippicv.a -Wl,--exclude-libs,libippiw.a -L/root/ffmpeg_build/lib  -Wl,--gc-sections -Wl,--as-needed  
    Linker flags (Debug):        -Wl,--exclude-libs,libippicv.a -Wl,--exclude-libs,libippiw.a -L/root/ffmpeg_build/lib  -Wl,--gc-sections -Wl,--as-needed  
    ccache:                      YES
    Precompiled headers:         NO
    Extra dependencies:          ade /lib64/libpng.so /lib64/libz.so dl m pthread rt
    3rdparty dependencies:       ittnotify libprotobuf libjpeg-turbo libwebp libtiff libopenjp2 IlmImf quirc ippiw ippicv

  OpenCV modules:
    To be built:                 calib3d core dnn features2d flann gapi highgui imgcodecs imgproc ml objdetect photo python3 stitching video videoio
    Disabled:                    world
    Disabled by dependency:      -
    Unavailable:                 java python2 ts
    Applications:                -
    Documentation:               NO
    Non-free algorithms:         NO

  GUI: 
    VTK support:                 NO

  Media I/O: 
    ZLib:                        /lib64/libz.so (ver 1.2.7)
    JPEG:                        libjpeg-turbo (ver 2.0.6-62)
    WEBP:                        build (ver encoder: 0x020f)
    PNG:                         /lib64/libpng.so (ver 1.5.13)
    TIFF:                        build (ver 42 - 4.0.10)
    JPEG 2000:                   build (ver 2.3.1)
    OpenEXR:                     build (ver 2.3.0)
    HDR:                         YES
    SUNRASTER:                   YES
    PXM:                         YES
    PFM:                         YES

  Video I/O:
    DC1394:                      NO
    FFMPEG:                      YES
      avcodec:                   YES (58.109.100)
      avformat:                  YES (58.61.100)
      avutil:                    YES (56.60.100)
      swscale:                   YES (5.8.100)
      avresample:                NO
    GStreamer:                   NO
    v4l/v4l2:                    YES (linux/videodev2.h)

  Parallel framework:            pthreads

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Intel IPP:                   2020.0.0 Gold [2020.0.0]
           at:                   /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-build/3rdparty/ippicv/ippicv_lnx/icv
    Intel IPP IW:                sources (2020.0.0)
              at:                /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-build/3rdparty/ippicv/ippicv_lnx/iw
    Lapack:                      NO
    Eigen:                       NO
    Custom HAL:                  NO
    Protobuf:                    build (3.5.1)

  OpenCL:                        YES (no extra features)
    Include path:                /tmp/pip-req-build-jhawztrk/opencv/3rdparty/include/opencl/1.2
    Link libraries:              Dynamic load

  Python 3:
    Interpreter:                 /opt/python/cp38-cp38/bin/python (ver 3.8.6)
    Libraries:                   libpython3.8.a (ver 3.8.6)
    numpy:                       /tmp/pip-build-env-a9o7g0a9/overlay/lib/python3.8/site-packages/numpy/core/include (ver 1.17.3)
    install path:                python

  Python (for build):            /bin/python2.7

  Java:                          
    ant:                         NO
    JNI:                         NO
    Java wrappers:               NO
    Java tests:                  NO

  Install to:                    /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-install
-----------------------------------------------------------------





No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
__version__ = 1.9.0a0+git3350296
debug = False
cuda = None
git_version = 33502964635186c126bd153ab8ff8c194455892d
hip = None


Uses tests cases:  ['linear:2dcf', 'linear:2dcl', 'linear:3dcf', 'linear:3dcl', 'linear:1d', 'nearest:2dcf', 'nearest:2dcl', 'nearest:3dcf', 'nearest:3dcl', 'nearest:1d', 'cubic:2dcf', 'cubic:2dcl', 'cubic:3dcf', 'cubic:3dcl', 'cubic:1d']
Torch config: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - CPU capability usage: AVX2
  - Build settings: BUILD_TYPE=Release, CXX_COMPILER=/usr/lib/ccache/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_PYTORCH_QNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=0, USE_CUDNN=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=0, USE_OPENMP=ON, 

Num threads: 1


---- Benchmark linear 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f050d0>
upsample_bilinear2d channels_first contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 617.59 us
  IQR:    35.06 us (587.28 to 622.34)
  1603 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f050a0>
upsample_bilinear2d channels_first contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 2.28 ms
  IQR:    0.05 ms (2.28 to 2.33)
  435 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f054f0>
upsample_bilinear2d channels_first non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 594.05 us
  IQR:    5.54 us (591.64 to 597.17)
  168 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f052e0>
upsample_bilinear2d channels_first non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 2.28 ms
  IQR:    0.03 ms (2.28 to 2.31)
  435 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05580>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 999.32 us
  IQR:    18.13 us (997.24 to 1015.37)
  985 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05640>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 98.64 us
  IQR:    1.03 us (98.11 to 99.14)
  102 measurements, 100 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f055e0>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 3.92 ms
  IQR:    0.05 ms (3.91 to 3.96)
  253 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f056d0>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 265.35 us
  IQR:    2.17 us (264.99 to 267.16)
  375 measurements, 10 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05820>
upsample_bilinear2d channels_last non-contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 13.62 ms
  IQR:    0.15 ms (13.56 to 13.71)
  73 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f056a0>
upsample_bilinear2d channels_last non-contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 291.92 ms
  IQR:    1.47 ms (291.38 to 292.85)
  4 measurements, 1 runs per measurement, 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05850>
upsample_bilinear2d channels_last non-contiguous: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 798.54 us
  IQR:    5.59 us (796.21 to 801.80)
  125 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f059d0>
upsample_bilinear2d channels_last non-contiguous: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 12.49 ms
  IQR:    0.10 ms (12.44 to 12.54)
  80 measurements, 1 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f053a0>
upsample_bilinear2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 409.65 us
  IQR:    11.26 us (404.44 to 415.70)
  243 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05940>
upsample_bilinear2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 180.64 us
  IQR:    5.67 us (180.22 to 185.89)
  546 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05b50>
upsample_bilinear2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 6.22 ms
  IQR:    0.06 ms (6.21 to 6.26)
  161 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1199112190>
upsample_bilinear2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 1.46 ms
  IQR:    0.04 ms (1.45 to 1.49)
  679 measurements, 1 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4f70>
upsample_bilinear2d channels_first contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 14.29 ms
  IQR:    0.12 ms (14.22 to 14.34)
  70 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4f40>
upsample_bilinear2d channels_first contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 295.39 ms
  IQR:    0.63 ms (294.97 to 295.60)
  4 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4e80>
upsample_bilinear2d channels_first contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 599.19 us
  IQR:    5.40 us (598.79 to 604.19)
  167 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4ca0>
upsample_bilinear2d channels_first contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 5.55 ms
  IQR:    0.05 ms (5.54 to 5.59)
  180 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4df0>
upsample_bilinear2d channels_first non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 607.84 us
  IQR:    5.43 us (603.71 to 609.13)
  165 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4c10>
upsample_bilinear2d channels_first non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 5.57 ms
  IQR:    0.07 ms (5.55 to 5.62)
  179 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4c40>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 1.00 ms
  IQR:    0.01 ms (1.00 to 1.01)
  984 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4f10>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 149.36 us
  IQR:    4.71 us (147.42 to 152.14)
  664 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4bb0>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 9.62 ms
  IQR:    0.10 ms (9.57 to 9.67)
  104 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4d30>
upsample_bilinear2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 677.05 us
  IQR:    5.77 us (674.90 to 680.68)
  1468 measurements, 1 runs per measurement, 1 thread

---- END Benchmark linear 2D ----


---- Benchmark linear 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 1d (1 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4b80>
upsample_linear1d channels_first contiguous: [4, 512, 320] -> [256]
1.9.0a0+git3350296
  Median: 490.03 us
  IQR:    2.37 us (489.83 to 492.20)
  204 measurements, 10 runs per measurement, 1 thread

- Bench upsample linear 1d (1 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185ee4af0>
upsample_linear1d channels_first contiguous: [4, 512, 320] -> [512]
1.9.0a0+git3350296
  Median: 963.45 us
  IQR:    14.34 us (958.02 to 972.36)
  104 measurements, 10 runs per measurement, 1 thread

---- END Benchmark linear 1D ----


---- Benchmark linear 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample linear 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05c40>
upsample_trilinear3d channels_first contiguous: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git3350296
  Median: 11.31 ms
  IQR:    0.15 ms (11.24 to 11.39)
  89 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f052b0>
upsample_trilinear3d channels_first contiguous: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git3350296
  Median: 210.75 ms
  IQR:    0.49 ms (210.56 to 211.05)
  5 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample linear 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05bb0>
upsample_trilinear3d channels_last non-contiguous: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git3350296
  Median: 16.27 ms
  IQR:    0.14 ms (16.21 to 16.35)
  62 measurements, 1 runs per measurement, 1 thread

- Bench upsample linear 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05df0>
upsample_trilinear3d channels_last non-contiguous: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git3350296
  Median: 290.95 ms
  IQR:    0.30 ms (290.93 to 291.23)
  4 measurements, 1 runs per measurement, 1 thread

---- END Benchmark linear 3D ----


---- Benchmark nearest 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05b20>
upsample_nearest2d channels_first contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 104.59 us
  IQR:    0.55 us (104.34 to 104.89)
  951 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05370>
upsample_nearest2d channels_first contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 355.37 us
  IQR:    3.01 us (355.13 to 358.14)
  281 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05910>
upsample_nearest2d channels_first non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 108.01 us
  IQR:    0.57 us (107.76 to 108.32)
  922 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05a00>
upsample_nearest2d channels_first non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 360.05 us
  IQR:    4.71 us (359.66 to 364.37)
  277 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05a60>
upsample_nearest2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 287.16 us
  IQR:    4.06 us (285.98 to 290.05)
  347 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05be0>
upsample_nearest2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 74.35 us
  IQR:    0.50 us (74.30 to 74.79)
  134 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05f70>
upsample_nearest2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 1.06 ms
  IQR:    0.09 ms (1.04 to 1.13)
  917 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05e20>
upsample_nearest2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 247.87 us
  IQR:    0.54 us (247.56 to 248.10)
  403 measurements, 10 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05fa0>
upsample_nearest2d channels_last non-contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 3.42 ms
  IQR:    0.03 ms (3.42 to 3.45)
  292 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05cd0>
upsample_nearest2d channels_last non-contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 100.25 ms
  IQR:    0.39 ms (100.02 to 100.41)
  10 measurements, 1 runs per measurement, 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05670>
upsample_nearest2d channels_last non-contiguous: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 84.53 us
  IQR:    0.58 us (84.18 to 84.77)
  119 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05700>
upsample_nearest2d channels_last non-contiguous: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 1.66 ms
  IQR:    0.03 ms (1.65 to 1.68)
  599 measurements, 1 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05100>
upsample_nearest2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 46.20 us
  IQR:    0.41 us (46.16 to 46.57)
  216 measurements, 100 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05b80>
upsample_nearest2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 37.05 us
  IQR:    0.39 us (37.04 to 37.43)
  269 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05f10>
upsample_nearest2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 436.19 us
  IQR:    4.58 us (435.54 to 440.12)
  229 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05550>
upsample_nearest2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 402.45 us
  IQR:    2.07 us (402.07 to 404.14)
  248 measurements, 10 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05d90>
upsample_nearest2d channels_first contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 6.15 ms
  IQR:    0.05 ms (6.12 to 6.17)
  163 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05a30>
upsample_nearest2d channels_first contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 125.69 ms
  IQR:    0.18 ms (125.59 to 125.77)
  8 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05d30>
upsample_nearest2d channels_first contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 120.90 us
  IQR:    0.53 us (120.80 to 121.33)
  823 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05af0>
upsample_nearest2d channels_first contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 847.83 us
  IQR:    5.57 us (846.86 to 852.43)
  118 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185f05dc0>
upsample_nearest2d channels_first non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 121.77 us
  IQR:    0.49 us (121.66 to 122.15)
  818 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd040>
upsample_nearest2d channels_first non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 858.56 us
  IQR:    5.74 us (857.26 to 863.00)
  117 measurements, 10 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd070>
upsample_nearest2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 289.63 us
  IQR:    4.69 us (286.54 to 291.23)
  346 measurements, 10 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd160>
upsample_nearest2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 84.16 us
  IQR:    0.76 us (83.74 to 84.51)
  119 measurements, 100 runs per measurement, 1 thread

- Bench upsample nearest 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd0a0>
upsample_nearest2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 2.56 ms
  IQR:    0.17 ms (2.51 to 2.68)
  384 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd190>
upsample_nearest2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 611.85 us
  IQR:    9.17 us (609.57 to 618.74)
  163 measurements, 10 runs per measurement, 1 thread

---- END Benchmark nearest 2D ----


---- Benchmark nearest 1D ----

Input tensor: [4, 512, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 1d (1 min_run_time) - downsampling to 256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd220>
upsample_nearest1d channels_first contiguous: [4, 512, 320] -> [256]
1.9.0a0+git3350296
  Median: 237.76 us
  IQR:    1.15 us (237.37 to 238.52)
  419 measurements, 10 runs per measurement, 1 thread

- Bench upsample nearest 1d (1 min_run_time) - upsampling to 512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd3d0>
upsample_nearest1d channels_first contiguous: [4, 512, 320] -> [512]
1.9.0a0+git3350296
  Median: 426.54 us
  IQR:    5.20 us (426.41 to 431.61)
  234 measurements, 10 runs per measurement, 1 thread

---- END Benchmark nearest 1D ----


---- Benchmark nearest 3D ----

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd2e0>
upsample_nearest3d channels_first contiguous: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git3350296
  Median: 943.29 us
  IQR:    15.52 us (937.62 to 953.15)
  1054 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd4f0>
upsample_nearest3d channels_first contiguous: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git3350296
  Median: 45.27 ms
  IQR:    0.24 ms (45.19 to 45.43)
  23 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 16, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample nearest 3d (1 min_run_time) - downsampling to [8, 256, 256]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd580>
upsample_nearest3d channels_last non-contiguous: [1, 3, 16, 320, 320] -> [8, 256, 256]
1.9.0a0+git3350296
  Median: 2.44 ms
  IQR:    0.06 ms (2.42 to 2.48)
  405 measurements, 1 runs per measurement, 1 thread

- Bench upsample nearest 3d (1 min_run_time) - upsampling to [32, 512, 512]
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd6a0>
upsample_nearest3d channels_last non-contiguous: [1, 3, 16, 320, 320] -> [32, 512, 512]
1.9.0a0+git3350296
  Median: 71.31 ms
  IQR:    0.41 ms (71.04 to 71.45)
  15 measurements, 1 runs per measurement, 1 thread

---- END Benchmark nearest 3D ----


---- Benchmark cubic 2D ----

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd400>
upsample_bicubic2d channels_first contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 2.31 ms
  IQR:    0.01 ms (2.31 to 2.32)
  431 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd7f0>
upsample_bicubic2d channels_first contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 9.09 ms
  IQR:    0.07 ms (9.09 to 9.16)
  110 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd850>
upsample_bicubic2d channels_first non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 2.31 ms
  IQR:    0.01 ms (2.31 to 2.31)
  431 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd910>
upsample_bicubic2d channels_first non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 9.15 ms
  IQR:    0.06 ms (9.10 to 9.16)
  110 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 320, 320]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd9a0>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
1.9.0a0+git3350296
  Median: 2.31 ms
  IQR:    0.01 ms (2.31 to 2.32)
  431 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd1f0>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 320, 320] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 209.85 us
  IQR:    1.85 us (209.46 to 211.30)
  474 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 512x512
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdda30>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
1.9.0a0+git3350296
  Median: 9.16 ms
  IQR:    0.06 ms (9.13 to 9.19)
  109 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdda90>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 320, 320] -> (512, 512)
opencv 4.5.1
setup: import cv2
  Median: 514.80 us
  IQR:    11.14 us (509.25 to 520.39)
  194 measurements, 10 runs per measurement, 1 thread

1 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdda60>
upsample_bicubic2d channels_last non-contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 92.30 ms
  IQR:    0.26 ms (92.22 to 92.48)
  11 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd550>
upsample_bicubic2d channels_last non-contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  1.05 s
  1 measurement, 1 runs , 1 thread

1.2 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [2, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd490>
upsample_bicubic2d channels_last non-contiguous: [2, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 5.46 ms
  IQR:    0.05 ms (5.44 to 5.49)
  183 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd820>
upsample_bicubic2d channels_last non-contiguous: [2, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 55.94 ms
  IQR:    0.26 ms (55.79 to 56.05)
  18 measurements, 1 runs per measurement, 1 thread

1.3 - Test sizes similar to https://github.com/pytorch/pytorch/blob/master/benchmarks/operator_benchmark/pt/interpolate_test.py

Input tensor: [1, 128, 64, 46]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fddac0>
upsample_bicubic2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
1.9.0a0+git3350296
  Median: 2.72 ms
  IQR:    0.05 ms (2.72 to 2.76)
  364 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd250>
upsample_bicubic2d channels_last non-contiguous: [1, 128, 64, 46] -> (32, 32)
opencv 4.5.1
setup: import cv2
  Median: 610.85 us
  IQR:    5.09 us (610.48 to 615.58)
  164 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fddbb0>
upsample_bicubic2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
1.9.0a0+git3350296
  Median: 27.81 ms
  IQR:    0.11 ms (27.78 to 27.89)
  36 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fddc10>
upsample_bicubic2d channels_last non-contiguous: [1, 128, 64, 46] -> (128, 128)
opencv 4.5.1
setup: import cv2
  Median: 3.61 ms
  IQR:    0.05 ms (3.58 to 3.63)
  277 measurements, 1 runs per measurement, 1 thread

2 - Test size as in https://github.com/mingfeima/op_bench-py

Input tensor: [32, 128, 64, 64]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 32x32
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fddb20>
upsample_bicubic2d channels_first contiguous: [32, 128, 64, 64] -> (32, 32)
1.9.0a0+git3350296
  Median: 50.14 ms
  IQR:    0.44 ms (49.93 to 50.37)
  20 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 128x128
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fddfa0>
upsample_bicubic2d channels_first contiguous: [32, 128, 64, 64] -> (128, 128)
1.9.0a0+git3350296
  Median: 875.95 ms
  2 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : True

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdde50>
upsample_bicubic2d channels_first contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 2.32 ms
  IQR:    0.03 ms (2.32 to 2.35)
  428 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fddfd0>
upsample_bicubic2d channels_first contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 22.25 ms
  IQR:    0.17 ms (22.22 to 22.39)
  45 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: False
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd3a0>
upsample_bicubic2d channels_first non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 2.32 ms
  IQR:    0.01 ms (2.32 to 2.33)
  430 measurements, 1 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fddf10>
upsample_bicubic2d channels_first non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 22.25 ms
  IQR:    0.15 ms (22.19 to 22.34)
  45 measurements, 1 runs per measurement, 1 thread

Input tensor: [1, 3, 500, 500]
Input is_contiguous memory_format torch.channels_last: True
Input is_contiguous : False

- Bench upsample cubic 2d (1 min_run_time) - downsampling to 256x256
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fddf70>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
1.9.0a0+git3350296
  Median: 2.33 ms
  IQR:    0.01 ms (2.33 to 2.34)
  427 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fddbe0>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 500, 500] -> (256, 256)
opencv 4.5.1
setup: import cv2
  Median: 286.53 us
  IQR:    2.57 us (284.47 to 287.03)
  348 measurements, 10 runs per measurement, 1 thread

- Bench upsample cubic 2d (1 min_run_time) - upsampling to 800x800
<torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fdd2b0>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
1.9.0a0+git3350296
  Median: 22.30 ms
  IQR:    0.12 ms (22.25 to 22.37)
  45 measurements, 1 runs per measurement, 1 thread
OpenCV:  <torch.utils.benchmark.utils.common.Measurement object at 0x7f1185fddd90>
upsample_bicubic2d channels_last non-contiguous: [1, 3, 500, 500] -> (800, 800)
opencv 4.5.1
setup: import cv2
  Median: 1.27 ms
  IQR:    0.01 ms (1.27 to 1.28)
  776 measurements, 1 runs per measurement, 1 thread

---- END Benchmark cubic 2D ----


opencv version: 4.5.1
numpy version: 1.20.1



General configuration for OpenCV 4.5.1 =====================================
  Version control:               4.5.1

  Platform:
    Timestamp:                   2021-01-02T13:26:00Z
    Host:                        Linux 4.15.0-1077-gcp x86_64
    CMake:                       3.18.4
    CMake generator:             Unix Makefiles
    CMake build tool:            /bin/gmake
    Configuration:               Release

  CPU/HW features:
    Baseline:                    SSE SSE2 SSE3
      requested:                 SSE3
    Dispatched code generation:  SSE4_1 SSE4_2 FP16 AVX AVX2 AVX512_SKX
      requested:                 SSE4_1 SSE4_2 AVX FP16 AVX2 AVX512_SKX
      SSE4_1 (15 files):         + SSSE3 SSE4_1
      SSE4_2 (1 files):          + SSSE3 SSE4_1 POPCNT SSE4_2
      FP16 (0 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
      AVX (4 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
      AVX2 (29 files):           + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2
      AVX512_SKX (4 files):      + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2 AVX_512F AVX512_COMMON AVX512_SKX

  C/C++:
    Built as dynamic libs?:      NO
    C++ standard:                11
    C++ Compiler:                /usr/lib/ccache/compilers/c++  (ver 9.3.1)
    C++ flags (Release):         -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
    C++ flags (Debug):           -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wuninitialized -Wsuggest-override -Wno-delete-non-virtual-dtor -Wno-comment -Wimplicit-fallthrough=3 -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
    C Compiler:                  /usr/lib/ccache/compilers/cc
    C flags (Release):           -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Wno-comment -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG
    C flags (Debug):             -Wl,-strip-all   -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wuninitialized -Wno-comment -Wno-strict-overflow -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections -fdata-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG
    Linker flags (Release):      -Wl,--exclude-libs,libippicv.a -Wl,--exclude-libs,libippiw.a -L/root/ffmpeg_build/lib  -Wl,--gc-sections -Wl,--as-needed  
    Linker flags (Debug):        -Wl,--exclude-libs,libippicv.a -Wl,--exclude-libs,libippiw.a -L/root/ffmpeg_build/lib  -Wl,--gc-sections -Wl,--as-needed  
    ccache:                      YES
    Precompiled headers:         NO
    Extra dependencies:          ade /lib64/libpng.so /lib64/libz.so dl m pthread rt
    3rdparty dependencies:       ittnotify libprotobuf libjpeg-turbo libwebp libtiff libopenjp2 IlmImf quirc ippiw ippicv

  OpenCV modules:
    To be built:                 calib3d core dnn features2d flann gapi highgui imgcodecs imgproc ml objdetect photo python3 stitching video videoio
    Disabled:                    world
    Disabled by dependency:      -
    Unavailable:                 java python2 ts
    Applications:                -
    Documentation:               NO
    Non-free algorithms:         NO

  GUI: 
    VTK support:                 NO

  Media I/O: 
    ZLib:                        /lib64/libz.so (ver 1.2.7)
    JPEG:                        libjpeg-turbo (ver 2.0.6-62)
    WEBP:                        build (ver encoder: 0x020f)
    PNG:                         /lib64/libpng.so (ver 1.5.13)
    TIFF:                        build (ver 42 - 4.0.10)
    JPEG 2000:                   build (ver 2.3.1)
    OpenEXR:                     build (ver 2.3.0)
    HDR:                         YES
    SUNRASTER:                   YES
    PXM:                         YES
    PFM:                         YES

  Video I/O:
    DC1394:                      NO
    FFMPEG:                      YES
      avcodec:                   YES (58.109.100)
      avformat:                  YES (58.61.100)
      avutil:                    YES (56.60.100)
      swscale:                   YES (5.8.100)
      avresample:                NO
    GStreamer:                   NO
    v4l/v4l2:                    YES (linux/videodev2.h)

  Parallel framework:            pthreads

  Trace:                         YES (with Intel ITT)

  Other third-party libraries:
    Intel IPP:                   2020.0.0 Gold [2020.0.0]
           at:                   /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-build/3rdparty/ippicv/ippicv_lnx/icv
    Intel IPP IW:                sources (2020.0.0)
              at:                /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-build/3rdparty/ippicv/ippicv_lnx/iw
    Lapack:                      NO
    Eigen:                       NO
    Custom HAL:                  NO
    Protobuf:                    build (3.5.1)

  OpenCL:                        YES (no extra features)
    Include path:                /tmp/pip-req-build-jhawztrk/opencv/3rdparty/include/opencl/1.2
    Link libraries:              Dynamic load

  Python 3:
    Interpreter:                 /opt/python/cp38-cp38/bin/python (ver 3.8.6)
    Libraries:                   libpython3.8.a (ver 3.8.6)
    numpy:                       /tmp/pip-build-env-a9o7g0a9/overlay/lib/python3.8/site-packages/numpy/core/include (ver 1.17.3)
    install path:                python

  Python (for build):            /bin/python2.7

  Java:                          
    ant:                         NO
    JNI:                         NO
    Java wrappers:               NO
    Java tests:                  NO

  Install to:                    /tmp/pip-req-build-jhawztrk/_skbuild/linux-x86_64-3.8/cmake-install
-----------------------------------------------------------------


